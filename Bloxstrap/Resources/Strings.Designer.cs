//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bloxstrap.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Bloxstrap.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licenses.
        /// </summary>
        public static string About_Licenses_Title {
            get {
                return ResourceManager.GetString("About.Licenses.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the people currently supporting Bloxstrap through [Ko-fi]({0}). A massive thank you to everyone here!.
        /// </summary>
        public static string About_Supporters_Description {
            get {
                return ResourceManager.GetString("About.Supporters.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly.
        /// </summary>
        public static string About_Supporters_Monthly {
            get {
                return ResourceManager.GetString("About.Supporters.Monthly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One-off.
        /// </summary>
        public static string About_Supporters_OneOff {
            get {
                return ResourceManager.GetString("About.Supporters.OneOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supporters.
        /// </summary>
        public static string About_Supporters_Title {
            get {
                return ResourceManager.GetString("About.Supporters.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About Bloxstrap.
        /// </summary>
        public static string About_Title {
            get {
                return ResourceManager.GetString("About.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All of Bloxstrap&apos;s translations are crowdsourced through [Crowdin]({0}). Everyone listed here are people who generously volunteered their time and effort to help localise Bloxstrap. A massive thank you to everyone here!.
        /// </summary>
        public static string About_Translators_Description {
            get {
                return ResourceManager.GetString("About.Translators.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translators.
        /// </summary>
        public static string About_Translators_Title {
            get {
                return ResourceManager.GetString("About.Translators.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server location could not be queried. You may be joining games too quickly..
        /// </summary>
        public static string ActivityWatcher_LocationQueryFailed {
            get {
                return ResourceManager.GetString("ActivityWatcher.LocationQueryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your current game will not show on your Discord presence because an error occurred when loading the game information..
        /// </summary>
        public static string ActivityWatcher_RichPresenceLoadFailed {
            get {
                return ResourceManager.GetString("ActivityWatcher.RichPresenceLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap was unable to automatically update to version {0}. Please update it manually by downloading and running it from the website..
        /// </summary>
        public static string Bootstrapper_AutoUpdateFailed {
            get {
                return ResourceManager.GetString("Bootstrapper.AutoUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox is currently running, and launching another instance will close it. Are you sure you want to continue launching?.
        /// </summary>
        public static string Bootstrapper_ConfirmLaunch {
            get {
                return ResourceManager.GetString("Bootstrapper.ConfirmLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first install Bloxstrap before uninstalling..
        /// </summary>
        public static string Bootstrapper_FirstRunUninstall {
            get {
                return ResourceManager.GetString("Bootstrapper.FirstRunUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save {0}: {1}.
        /// </summary>
        public static string Bootstrapper_JsonManagerSaveFailed {
            get {
                return ResourceManager.GetString("Bootstrapper.JsonManagerSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap does not have enough disk space to download and install Roblox. Please free up some disk space and try again..
        /// </summary>
        public static string Bootstrapper_NotEnoughSpace {
            get {
                return ResourceManager.GetString("Bootstrapper.NotEnoughSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying Roblox modifications....
        /// </summary>
        public static string Bootstrapper_Status_ApplyingModifications {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.ApplyingModifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring {product}....
        /// </summary>
        public static string Bootstrapper_Status_Configuring {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Configuring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to Roblox....
        /// </summary>
        public static string Bootstrapper_Status_Connecting {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing {product}....
        /// </summary>
        public static string Bootstrapper_Status_Installing {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing WebView2, please wait....
        /// </summary>
        public static string Bootstrapper_Status_InstallingWebView2 {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.InstallingWebView2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting {product}....
        /// </summary>
        public static string Bootstrapper_Status_Starting {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrading {product}....
        /// </summary>
        public static string Bootstrapper_Status_Upgrading {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Upgrading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting the latest Bloxstrap....
        /// </summary>
        public static string Bootstrapper_Status_UpgradingBloxstrap {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.UpgradingBloxstrap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for other instances....
        /// </summary>
        public static string Bootstrapper_Status_WaitingOtherInstances {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.WaitingOtherInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style preview - Click the X button at the top right to close.
        /// </summary>
        public static string Bootstrapper_StylePreview_ImageCancel {
            get {
                return ResourceManager.GetString("Bootstrapper.StylePreview.ImageCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style preview - Click Cancel to close.
        /// </summary>
        public static string Bootstrapper_StylePreview_TextCancel {
            get {
                return ResourceManager.GetString("Bootstrapper.StylePreview.TextCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap has successfully uninstalled.
        /// </summary>
        public static string Bootstrapper_SuccessfullyUninstalled {
            get {
                return ResourceManager.GetString("Bootstrapper.SuccessfullyUninstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox is currently running, but must be closed before uninstalling Bloxstrap. Would you like close Roblox now?.
        /// </summary>
        public static string Bootstrapper_Uninstall_RobloxRunning {
            get {
                return ResourceManager.GetString("Bootstrapper.Uninstall.RobloxRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You currently do not have the WebView2 runtime installed. Some Roblox features will not work properly without it, such as the desktop app. Would you like to download it now?.
        /// </summary>
        public static string Bootstrapper_WebView2NotFound {
            get {
                return ResourceManager.GetString("Bootstrapper.WebView2NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox requires the use of Windows Media Foundation components. You appear to be missing them, likely because you are using an N edition of Windows. Please install them first, and then launch Roblox..
        /// </summary>
        public static string Bootstrapper_WMFNotFound {
            get {
                return ResourceManager.GetString("Bootstrapper.WMFNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add single.
        /// </summary>
        public static string Common_AddSingle {
            get {
                return ResourceManager.GetString("Common.AddSingle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analytics.
        /// </summary>
        public static string Common_Analytics {
            get {
                return ResourceManager.GetString("Common.Analytics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic.
        /// </summary>
        public static string Common_Automatic {
            get {
                return ResourceManager.GetString("Common.Automatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse.
        /// </summary>
        public static string Common_Browse {
            get {
                return ResourceManager.GetString("Common.Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Common_Cancel {
            get {
                return ResourceManager.GetString("Common.Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Common_Close {
            get {
                return ResourceManager.GetString("Common.Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        public static string Common_Custom {
            get {
                return ResourceManager.GetString("Common.Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Common_Default {
            get {
                return ResourceManager.GetString("Common.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Common_Delete {
            get {
                return ResourceManager.GetString("Common.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord Rich Presence.
        /// </summary>
        public static string Common_DiscordRichPresence {
            get {
                return ResourceManager.GetString("Common.DiscordRichPresence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string Common_Help {
            get {
                return ResourceManager.GetString("Common.Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import from file.
        /// </summary>
        public static string Common_ImportFromFile {
            get {
                return ResourceManager.GetString("Common.ImportFromFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import JSON.
        /// </summary>
        public static string Common_ImportJson {
            get {
                return ResourceManager.GetString("Common.ImportJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading, please wait....
        /// </summary>
        public static string Common_Loading {
            get {
                return ResourceManager.GetString("Common.Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Miscellaneous.
        /// </summary>
        public static string Common_Miscellaneous {
            get {
                return ResourceManager.GetString("Common.Miscellaneous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Common_Name {
            get {
                return ResourceManager.GetString("Common.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back.
        /// </summary>
        public static string Common_Navigation_Back {
            get {
                return ResourceManager.GetString("Common.Navigation.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Common_Navigation_Install {
            get {
                return ResourceManager.GetString("Common.Navigation.Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next.
        /// </summary>
        public static string Common_Navigation_Next {
            get {
                return ResourceManager.GetString("Common.Navigation.Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load data because of a network error..
        /// </summary>
        public static string Common_NetworkError {
            get {
                return ResourceManager.GetString("Common.NetworkError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        public static string Common_New {
            get {
                return ResourceManager.GetString("Common.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string Common_No {
            get {
                return ResourceManager.GetString("Common.No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not available.
        /// </summary>
        public static string Common_NotAvailable {
            get {
                return ResourceManager.GetString("Common.NotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string Common_OK {
            get {
                return ResourceManager.GetString("Common.OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open log file.
        /// </summary>
        public static string Common_OpenLogFile {
            get {
                return ResourceManager.GetString("Common.OpenLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Presets.
        /// </summary>
        public static string Common_Presets {
            get {
                return ResourceManager.GetString("Common.Presets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Common_Reset {
            get {
                return ResourceManager.GetString("Common.Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox has not yet been installed. Please launch Roblox using Bloxstrap at least once before trying to use this option..
        /// </summary>
        public static string Common_RobloxNotInstalled {
            get {
                return ResourceManager.GetString("Common.RobloxNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shortcuts.
        /// </summary>
        public static string Common_Shortcuts {
            get {
                return ResourceManager.GetString("Common.Shortcuts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desktop icon.
        /// </summary>
        public static string Common_Shortcuts_Desktop {
            get {
                return ResourceManager.GetString("Common.Shortcuts.Desktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Menu icon.
        /// </summary>
        public static string Common_Shortcuts_StartMenu {
            get {
                return ResourceManager.GetString("Common.Shortcuts.StartMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System default.
        /// </summary>
        public static string Common_SystemDefault {
            get {
                return ResourceManager.GetString("Common.SystemDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string Common_Value {
            get {
                return ResourceManager.GetString("Common.Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string Common_Warning {
            get {
                return ResourceManager.GetString("Common.Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Common_Yes {
            get {
                return ResourceManager.GetString("Common.Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Roblox.
        /// </summary>
        public static string ContextMenu_CloseRoblox {
            get {
                return ResourceManager.GetString("ContextMenu.CloseRoblox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to close Roblox? This will forcefully end the process..
        /// </summary>
        public static string ContextMenu_CloseRobloxMessage {
            get {
                return ResourceManager.GetString("ContextMenu.CloseRobloxMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy invite deeplink.
        /// </summary>
        public static string ContextMenu_CopyDeeplinkInvite {
            get {
                return ResourceManager.GetString("ContextMenu.CopyDeeplinkInvite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game history is only recorded for your current Roblox session. Games will appear here as you leave them or teleport within them. Not all servers will be rejoinable..
        /// </summary>
        public static string ContextMenu_GameHistory_Description {
            get {
                return ResourceManager.GetString("ContextMenu.GameHistory.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rejoin.
        /// </summary>
        public static string ContextMenu_GameHistory_Rejoin {
            get {
                return ResourceManager.GetString("ContextMenu.GameHistory.Rejoin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game history.
        /// </summary>
        public static string ContextMenu_GameHistory_Title {
            get {
                return ResourceManager.GetString("ContextMenu.GameHistory.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Instance ID.
        /// </summary>
        public static string ContextMenu_ServerInformation_CopyInstanceId {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.CopyInstanceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance ID.
        /// </summary>
        public static string ContextMenu_ServerInformation_InstanceId {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.InstanceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location.
        /// </summary>
        public static string ContextMenu_ServerInformation_Location {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location: {0}
        ///Click for more information.
        /// </summary>
        public static string ContextMenu_ServerInformation_Notification_Text {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Notification.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to private server.
        /// </summary>
        public static string ContextMenu_ServerInformation_Notification_Title_Private {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Notification.Title.Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to public server.
        /// </summary>
        public static string ContextMenu_ServerInformation_Notification_Title_Public {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Notification.Title.Public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to reserved server.
        /// </summary>
        public static string ContextMenu_ServerInformation_Notification_Title_Reserved {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Notification.Title.Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server information.
        /// </summary>
        public static string ContextMenu_ServerInformation_Title {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string ContextMenu_ServerInformation_Type {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Fast Flag.
        /// </summary>
        public static string Dialog_AddFastFlag_Title {
            get {
                return ResourceManager.GetString("Dialog.AddFastFlag.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait for installation to finish..
        /// </summary>
        public static string Dialog_AlreadyRunning_Installer {
            get {
                return ResourceManager.GetString("Dialog.AlreadyRunning.Installer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait for uninstallation to finish..
        /// </summary>
        public static string Dialog_AlreadyRunning_Uninstaller {
            get {
                return ResourceManager.GetString("Dialog.AlreadyRunning.Uninstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap was unable to create shortcuts for the Desktop and Start menu. Try creating them later through the settings..
        /// </summary>
        public static string Dialog_CannotCreateShortcuts {
            get {
                return ResourceManager.GetString("Dialog.CannotCreateShortcuts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More information:.
        /// </summary>
        public static string Dialog_Connectivity_MoreInfo {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something is likely preventing Bloxstrap from connecting to the internet..
        /// </summary>
        public static string Dialog_Connectivity_Preventing {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.Preventing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox may be down right now. See {0} for more information..
        /// </summary>
        public static string Dialog_Connectivity_RobloxDown {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.RobloxDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Roblox needs to be installed or upgraded, Bloxstrap cannot continue..
        /// </summary>
        public static string Dialog_Connectivity_RobloxUpgradeNeeded {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.RobloxUpgradeNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For this launch, Roblox will not be checked for upgrades, and changes to mods will not be applied..
        /// </summary>
        public static string Dialog_Connectivity_RobloxUpgradeSkip {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.RobloxUpgradeSkip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection timed out, which could indicate a poor internet connection or a firewall block..
        /// </summary>
        public static string Dialog_Connectivity_TimedOut {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.TimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connectivity error.
        /// </summary>
        public static string Dialog_Connectivity_Title {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please try again later..
        /// </summary>
        public static string Dialog_Connectivity_TryAgainLater {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.TryAgainLater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap is unable to connect to {0}.
        /// </summary>
        public static string Dialog_Connectivity_UnableToConnect {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.UnableToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap is unable to download Roblox.
        /// </summary>
        public static string Dialog_Connectivity_UnableToDownload {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.UnableToDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox cannot be downloaded at this time. Please read the following help page for more information: {0}.
        /// </summary>
        public static string Dialog_Connectivity_UnableToDownloadReason {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.UnableToDownloadReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy log contents.
        /// </summary>
        public static string Dialog_Exception_CopyLogContents {
            get {
                return ResourceManager.GetString("Dialog.Exception.CopyLogContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred while running Bloxstrap.
        /// </summary>
        public static string Dialog_Exception_Info_1 {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the [Bloxstrap Wiki]({0}) first to see if this problem has already been addressed with a fix.
        ///
        ///If not, then please report this exception through a [GitHub issue]({1}) along with a copy of the log file that was created..
        /// </summary>
        public static string Dialog_Exception_Info_2 {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the [Bloxstrap Wiki]({0}) first to see if this problem has already been addressed with a fix.
        ///
        ///If not, then please report this exception to the maintainers of this fork. Do NOT report this to Bloxstrap&apos;s GitHub issues, as this is an unoffical build..
        /// </summary>
        public static string Dialog_Exception_Info_2_Alt {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.2.Alt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report exception.
        /// </summary>
        public static string Dialog_Exception_Report {
            get {
                return ResourceManager.GetString("Dialog.Exception.Report", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap Exception.
        /// </summary>
        public static string Dialog_Exception_Title {
            get {
                return ResourceManager.GetString("Dialog.Exception.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0}.
        /// </summary>
        public static string Dialog_Exception_Version {
            get {
                return ResourceManager.GetString("Dialog.Exception.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The chosen bootstrapper icon could not be loaded.
        ///
        ///{0}.
        /// </summary>
        public static string Dialog_IconLoadFailed {
            get {
                return ResourceManager.GetString("Dialog.IconLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose preferred language.
        /// </summary>
        public static string Dialog_LanguageSelector_Header {
            get {
                return ResourceManager.GetString("Dialog.LanguageSelector.Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a language before continuing with installation..
        /// </summary>
        public static string Dialog_LanguageSelector_Subtext {
            get {
                return ResourceManager.GetString("Dialog.LanguageSelector.Subtext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox has crashed..
        /// </summary>
        public static string Dialog_PlayerError_Crash {
            get {
                return ResourceManager.GetString("Dialog.PlayerError.Crash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox failed to launch..
        /// </summary>
        public static string Dialog_PlayerError_FailedLaunch {
            get {
                return ResourceManager.GetString("Dialog.PlayerError.FailedLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please read the following help information, which will open in your web browser when you close this dialog..
        /// </summary>
        public static string Dialog_PlayerError_HelpInformation {
            get {
                return ResourceManager.GetString("Dialog.PlayerError.HelpInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap is unable to write to the Windows Registry. An antivirus is likely interfering and causing issues. Please check to make sure there isn&apos;t anything that would restrict Bloxstrap&apos;s operation..
        /// </summary>
        public static string Dialog_RegistryWriteError {
            get {
                return ResourceManager.GetString("Dialog.RegistryWriteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Early 2015.
        /// </summary>
        public static string Enums_BootstrapperIcon_IconEarly2015 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconEarly2015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Late 2015.
        /// </summary>
        public static string Enums_BootstrapperIcon_IconLate2015 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconLate2015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fake Byfron (2023).
        /// </summary>
        public static string Enums_BootstrapperStyle_ByfronDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ByfronDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap (Classic).
        /// </summary>
        public static string Enums_BootstrapperStyle_ClassicFluentDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ClassicFluentDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap (Glass).
        /// </summary>
        public static string Enums_BootstrapperStyle_FluentAeroDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.FluentAeroDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy (2008 - 2011).
        /// </summary>
        public static string Enums_BootstrapperStyle_LegacyDialog2008 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.LegacyDialog2008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy (2011 - 2014).
        /// </summary>
        public static string Enums_BootstrapperStyle_LegacyDialog2011 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.LegacyDialog2011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox (~2014).
        /// </summary>
        public static string Enums_BootstrapperStyle_ProgressDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ProgressDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vista (2008 - 2011).
        /// </summary>
        public static string Enums_BootstrapperStyle_VistaDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.VistaDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2006 (Cartoony).
        /// </summary>
        public static string Enums_CursorType_From2006 {
            get {
                return ResourceManager.GetString("Enums.CursorType.From2006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2013 (Angular).
        /// </summary>
        public static string Enums_CursorType_From2013 {
            get {
                return ResourceManager.GetString("Enums.CursorType.From2013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catmoji.
        /// </summary>
        public static string Enums_EmojiType_Catmoji {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Catmoji", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default (Twemoji).
        /// </summary>
        public static string Enums_EmojiType_Default {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 10.
        /// </summary>
        public static string Enums_EmojiType_Windows10 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 11.
        /// </summary>
        public static string Enums_EmojiType_Windows11 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 8.
        /// </summary>
        public static string Enums_EmojiType_Windows8 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2015 (V1).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V1 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2020 (V2).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V2 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2023 (V4).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V4 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2023 (V4 + New UI).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V4Chrome {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V4Chrome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chosen by game.
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Future (Phase 3).
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Future {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Future", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shadow Map (Phase 2).
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_ShadowMap {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.ShadowMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voxel (Phase 1).
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Voxel {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Voxel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direct3D 10.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_D3D10 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.D3D10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direct3D 11.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_D3D11 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.D3D11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level 0 (Lowest).
        /// </summary>
        public static string Enums_FlagPresets_TextureQuality_Level0 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.TextureQuality.Level0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level 1.
        /// </summary>
        public static string Enums_FlagPresets_TextureQuality_Level1 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.TextureQuality.Level1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level 2.
        /// </summary>
        public static string Enums_FlagPresets_TextureQuality_Level2 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.TextureQuality.Level2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level 3 (Highest).
        /// </summary>
        public static string Enums_FlagPresets_TextureQuality_Level3 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.TextureQuality.Level3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private server.
        /// </summary>
        public static string Enums_ServerType_Private {
            get {
                return ResourceManager.GetString("Enums.ServerType.Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public server.
        /// </summary>
        public static string Enums_ServerType_Public {
            get {
                return ResourceManager.GetString("Enums.ServerType.Public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved server.
        /// </summary>
        public static string Enums_ServerType_Reserved {
            get {
                return ResourceManager.GetString("Enums.ServerType.Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark.
        /// </summary>
        public static string Enums_Theme_Dark {
            get {
                return ResourceManager.GetString("Enums.Theme.Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        public static string Enums_Theme_Light {
            get {
                return ResourceManager.GetString("Enums.Theme.Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JSON files.
        /// </summary>
        public static string FileTypes_JSONFiles {
            get {
                return ResourceManager.GetString("FileTypes.JSONFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap has been upgraded to v{0}.
        /// </summary>
        public static string InstallChecker_Updated {
            get {
                return ResourceManager.GetString("InstallChecker.Updated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of Bloxstrap you&apos;ve launched is different to the version you currently have installed.
        ///Would you like to upgrade your currently installed version?.
        /// </summary>
        public static string InstallChecker_VersionDifferentThanInstalled {
            get {
                return ResourceManager.GetString("InstallChecker.VersionDifferentThanInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of Bloxstrap you&apos;ve launched is older than the version you currently have installed.
        ///Issues may occur and your settings may be altered. A reinstall is recommended.
        ///Are you sure you want to continue?.
        /// </summary>
        public static string InstallChecker_VersionLessThanInstalled {
            get {
                return ResourceManager.GetString("InstallChecker.VersionLessThanInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Will drop you into the desktop app once everything&apos;s done.
        /// </summary>
        public static string Installer_Completion_Launch_Description {
            get {
                return ResourceManager.GetString("Installer.Completion.Launch.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install and launch Roblox.
        /// </summary>
        public static string Installer_Completion_Launch_Title {
            get {
                return ResourceManager.GetString("Installer.Completion.Launch.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tweak with all the features it has to offer.
        /// </summary>
        public static string Installer_Completion_Settings_Description {
            get {
                return ResourceManager.GetString("Installer.Completion.Settings.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Bloxstrap&apos;s settings.
        /// </summary>
        public static string Installer_Completion_Settings_Title {
            get {
                return ResourceManager.GetString("Installer.Completion.Settings.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap has successfully been installed.
        ///
        ///Roblox has not yet been installed, that will happen when you launch it with Bloxstrap for the first time. However, before you do that, you may want to configure Bloxstrap&apos;s settings first.
        ///
        ///Also, avoid using the &quot;Roblox Player&quot; shortcut to launch Roblox, as Bloxstrap won&apos;t launch with Roblox. If you don&apos;t see Bloxstrap show when launching from the website, simply launch Roblox with Bloxstrap once from the desktop to fix it.
        ///
        ///What would you like to do?.
        /// </summary>
        public static string Installer_Completion_Text {
            get {
                return ResourceManager.GetString("Installer.Completion.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completion.
        /// </summary>
        public static string Installer_Completion_Title {
            get {
                return ResourceManager.GetString("Installer.Completion.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap has been installed to this location before and is still present, however the installer cannot overwrite the old executable. 
        ///
        ///Please manually delete Bloxstrap.exe from the install location or try restarting your system, and then retry installation afterwards..
        /// </summary>
        public static string Installer_Install_CannotOverwrite {
            get {
                return ResourceManager.GetString("Installer.Install.CannotOverwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing data found. Your mods and settings will be restored..
        /// </summary>
        public static string Installer_Install_Location_DataFound {
            get {
                return ResourceManager.GetString("Installer.Install.Location.DataFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox will also be installed to this path. Change this if you prefer to install all your games to a separate drive. Otherwise, it&apos;s recommended that you keep this as it is..
        /// </summary>
        public static string Installer_Install_Location_Text {
            get {
                return ResourceManager.GetString("Installer.Install.Location.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose where to install to.
        /// </summary>
        public static string Installer_Install_Location_Title {
            get {
                return ResourceManager.GetString("Installer.Install.Location.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are general shortcuts that bring up a multi-choice launch menu. Shortcuts for specific functions can be created later in the settings..
        /// </summary>
        public static string Installer_Install_Shortcuts_Description {
            get {
                return ResourceManager.GetString("Installer.Install.Shortcuts.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Installer_Install_Title {
            get {
                return ResourceManager.GetString("Installer.Install.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel the installation?.
        /// </summary>
        public static string Installer_ShouldCancel {
            get {
                return ResourceManager.GetString("Installer.ShouldCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap Installer.
        /// </summary>
        public static string Installer_Title {
            get {
                return ResourceManager.GetString("Installer.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thank you for downloading Bloxstrap. 
        ///
        ///The only official websites to download Bloxstrap from are {0} and {1}, so please verify that you got it from an official source.
        ///
        ///This installation process will be quick and simple, and you will be able to configure any of Bloxstrap&apos;s settings after installation..
        /// </summary>
        public static string Installer_Welcome_MainText {
            get {
                return ResourceManager.GetString("Installer.Welcome.MainText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please click &apos;Next&apos; to continue..
        /// </summary>
        public static string Installer_Welcome_NextToContinue {
            get {
                return ResourceManager.GetString("Installer.Welcome.NextToContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome.
        /// </summary>
        public static string Installer_Welcome_Title {
            get {
                return ResourceManager.GetString("Installer.Welcome.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are trying to install version {0} of Bloxstrap, but the latest version available is {1}. Would you like to download it?.
        /// </summary>
        public static string Installer_Welcome_UpdateNotice {
            get {
                return ResourceManager.GetString("Installer.Welcome.UpdateNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Fast Flags could not be loaded. They have been reset to the default configuration..
        /// </summary>
        public static string JsonManager_FastFlagsLoadFailed {
            get {
                return ResourceManager.GetString("JsonManager.FastFlagsLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Settings could not be loaded. They have been reset to the default configuration..
        /// </summary>
        public static string JsonManager_SettingsLoadFailed {
            get {
                return ResourceManager.GetString("JsonManager.SettingsLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure settings.
        /// </summary>
        public static string LaunchMenu_ConfigureSettings {
            get {
                return ResourceManager.GetString("LaunchMenu.ConfigureSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support us on Ko-fi!.
        /// </summary>
        public static string LaunchMenu_Donate {
            get {
                return ResourceManager.GetString("LaunchMenu.Donate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Roblox.
        /// </summary>
        public static string LaunchMenu_LaunchRoblox {
            get {
                return ResourceManager.GetString("LaunchMenu.LaunchRoblox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See the Wiki for help.
        /// </summary>
        public static string LaunchMenu_Wiki_Description {
            get {
                return ResourceManager.GetString("LaunchMenu.Wiki.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Having an issue?.
        /// </summary>
        public static string LaunchMenu_Wiki_Title {
            get {
                return ResourceManager.GetString("LaunchMenu.Wiki.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No log file will be written for this launch because Bloxstrap is unable to write to the folder at &apos;{0}&apos;.
        /// </summary>
        public static string Logger_NoWriteMode {
            get {
                return ResourceManager.GetString("Logger.NoWriteMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contributors.
        /// </summary>
        public static string Menu_About_Contributors {
            get {
                return ResourceManager.GetString("Menu.About.Contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code.
        /// </summary>
        public static string Menu_About_Contributors_Code {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the people who have made notable contributions to Bloxstrap, helping make it what it is..
        /// </summary>
        public static string Menu_About_Contributors_Description {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature Ideas.
        /// </summary>
        public static string Menu_About_Contributors_FeatureIdeas {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.FeatureIdeas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Special Thanks.
        /// </summary>
        public static string Menu_About_Contributors_SpecialThanks {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.SpecialThanks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An alternative bootstrapper for Roblox with a bunch of extra features..
        /// </summary>
        public static string Menu_About_Description {
            get {
                return ResourceManager.GetString("Menu.About.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord server.
        /// </summary>
        public static string Menu_About_DiscordServer {
            get {
                return ResourceManager.GetString("Menu.About.DiscordServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub repository.
        /// </summary>
        public static string Menu_About_GithubRepository {
            get {
                return ResourceManager.GetString("Menu.About.GithubRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help and Information.
        /// </summary>
        public static string Menu_About_HelpInformation {
            get {
                return ResourceManager.GetString("Menu.About.HelpInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licenses.
        /// </summary>
        public static string Menu_About_Licenses {
            get {
                return ResourceManager.GetString("Menu.About.Licenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BSD 2-Clause License.
        /// </summary>
        public static string Menu_About_Licenses_BSD2 {
            get {
                return ResourceManager.GetString("Menu.About.Licenses.BSD2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License.
        /// </summary>
        public static string Menu_About_Licenses_MIT {
            get {
                return ResourceManager.GetString("Menu.About.Licenses.MIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report an issue.
        /// </summary>
        public static string Menu_About_ReportIssue {
            get {
                return ResourceManager.GetString("Menu.About.ReportIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string Menu_About_Title {
            get {
                return ResourceManager.GetString("Menu.About.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0}.
        /// </summary>
        public static string Menu_About_Version {
            get {
                return ResourceManager.GetString("Menu.About.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files.
        /// </summary>
        public static string Menu_AllFiles {
            get {
                return ResourceManager.GetString("Menu.AllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please note that not all your changes will immediately apply until you close all currently open Roblox instances..
        /// </summary>
        public static string Menu_AlreadyRunning_Caption {
            get {
                return ResourceManager.GetString("Menu.AlreadyRunning.Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap is already running.
        /// </summary>
        public static string Menu_AlreadyRunning_Title {
            get {
                return ResourceManager.GetString("Menu.AlreadyRunning.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can make it look different, retro, or even just like Roblox..
        /// </summary>
        public static string Menu_Appearance_Bootstrapper_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Bootstrapper.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrapper.
        /// </summary>
        public static string Menu_Appearance_Bootstrapper_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Bootstrapper.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure other miscellaneous customisable options..
        /// </summary>
        public static string Menu_Appearance_Customisation_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Customisation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customisation.
        /// </summary>
        public static string Menu_Appearance_Customisation_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Customisation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be a multi-size .ico file with sizes 16px to 128px. Set Icon as &apos;Custom&apos; to use it..
        /// </summary>
        public static string Menu_Appearance_CustomisationIcon_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationIcon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Icon.
        /// </summary>
        public static string Menu_Appearance_CustomisationIcon_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationIcon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text that shows as the title of the bootstrapper..
        /// </summary>
        public static string Menu_Appearance_CustomisationTitle_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationTitle.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title.
        /// </summary>
        public static string Menu_Appearance_CustomisationTitle_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationTitle.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure how Bloxstrap should look..
        /// </summary>
        public static string Menu_Appearance_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Theme.
        /// </summary>
        public static string Menu_Appearance_Global_Theme_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Global.Theme.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose what icon it should use..
        /// </summary>
        public static string Menu_Appearance_Icon_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Icon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon.
        /// </summary>
        public static string Menu_Appearance_Icon_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Icon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A relaunch is required for changes to take effect..
        /// </summary>
        public static string Menu_Appearance_Language_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Language.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Menu_Appearance_Language_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Language.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview.
        /// </summary>
        public static string Menu_Appearance_Preview {
            get {
                return ResourceManager.GetString("Menu.Appearance.Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose how it should look. Dark theme does not apply to Legacy/Vista..
        /// </summary>
        public static string Menu_Appearance_Style_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Style.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style.
        /// </summary>
        public static string Menu_Appearance_Style_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Style.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appearance.
        /// </summary>
        public static string Menu_Appearance_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap will automatically check and update itself when launching Roblox..
        /// </summary>
        public static string Menu_Behaviour_AutoUpdate_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoUpdate.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically update Bloxstrap.
        /// </summary>
        public static string Menu_Behaviour_AutoUpdate_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoUpdate.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent against closures of your existing game from accidentally launching another one..
        /// </summary>
        public static string Menu_Behaviour_ConfirmLaunches_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ConfirmLaunches.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prompt to confirm when launching another Roblox instance.
        /// </summary>
        public static string Menu_Behaviour_ConfirmLaunches_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ConfirmLaunches.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure what Bloxstrap should do when launching Roblox..
        /// </summary>
        public static string Menu_Behaviour_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only applies to games launched from the Roblox website..
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxLanguage_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxLanguage.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow use of unsupported Roblox languages.
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxLanguage_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxLanguage.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox will be installed fresh on next launch..
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxReinstall_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxReinstall.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Roblox reinstallation.
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxReinstall_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxReinstall.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrapper.
        /// </summary>
        public static string Menu_Behaviour_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s anonymous and nothing evil, promise. For insight on what we collect and why, see our [privacy policy]({0})..
        /// </summary>
        public static string Menu_Bloxstrap_Analytics_Description {
            get {
                return ResourceManager.GetString("Menu.Bloxstrap.Analytics.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable sending of analytics.
        /// </summary>
        public static string Menu_Bloxstrap_Analytics_Title {
            get {
                return ResourceManager.GetString("Menu.Bloxstrap.Analytics.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure options related to Bloxstrap&apos;s behaviour itself..
        /// </summary>
        public static string Menu_Bloxstrap_Description {
            get {
                return ResourceManager.GetString("Menu.Bloxstrap.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new.
        /// </summary>
        public static string Menu_FastFlagEditor_AddNew {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.AddNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An entry for this flag name already exists..
        /// </summary>
        public static string Menu_FastFlagEditor_AlreadyExists {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back.
        /// </summary>
        public static string Menu_FastFlagEditor_Back {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Misusing this can lead to instability or unexpected things happening..
        /// </summary>
        public static string Menu_FastFlagEditor_BannerText {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.BannerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use with caution..
        /// </summary>
        public static string Menu_FastFlagEditor_BannerTitle {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.BannerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some of the flags you are attempting to import already have set values. Would you like to overwrite their current values with the ones defined in the import?
        ///
        ///There are {0} conflicting flag definitions:
        ///{1}.
        /// </summary>
        public static string Menu_FastFlagEditor_ConflictingImport {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ConflictingImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete selected.
        /// </summary>
        public static string Menu_FastFlagEditor_DeleteSelected {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.DeleteSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage your own Fast Flags. Double click a column to edit..
        /// </summary>
        public static string Menu_FastFlagEditor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export JSON.
        /// </summary>
        public static string Menu_FastFlagEditor_ExportJson {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ExportJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the value must be a boolean (either &apos;True&apos; or &apos;False&apos;).
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidBoolValue {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidBoolValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the name can only contain letters, numbers, and underscores.
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidCharacter {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The JSON you&apos;ve entered does not appear to be valid. Please double check it and try again.
        ///
        ///More information:
        ///{0}.
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidJSON {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidJSON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the value must be a number.
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidNumberValue {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidNumberValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the place filter is not formatted correctly..
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidPlaceFilter {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidPlaceFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entry for &apos;{0}&apos; is not valid as the name must start with FFlag, DFInt, etc.
        /// </summary>
        public static string Menu_FastFlagEditor_InvalidPrefix {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.InvalidPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copied to clipboard..
        /// </summary>
        public static string Menu_FastFlagEditor_JsonCopiedToClipboard {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.JsonCopiedToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You appear to be importing a very large configuration. You should only be importing configurations that you fully understand. Do NOT blindly paste in configurations made by other people. If you continue, you will very likely end up with stability issues and encounter unexpected changes.
        ///
        ///Are you sure you want to continue?.
        /// </summary>
        public static string Menu_FastFlagEditor_LargeConfig {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.LargeConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search.
        /// </summary>
        public static string Menu_FastFlagEditor_Search {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show preset flags.
        /// </summary>
        public static string Menu_FastFlagEditor_ShowPresetFlags {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ShowPresetFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fast Flag Editor.
        /// </summary>
        public static string Menu_FastFlagEditor_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go back.
        /// </summary>
        public static string Menu_FastFlagEditor_Warning_Back {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Warning.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I know what I&apos;m doing.
        /// </summary>
        public static string Menu_FastFlagEditor_Warning_Continue {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Warning.Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you know what you are doing?.
        /// </summary>
        public static string Menu_FastFlagEditor_Warning_Header {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Warning.Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fast Flags are extremely powerful, being that they are intended to only be used by Roblox engineers. While they can be very useful, manually configuring them can cause serious issues with stability and functionality. Do NOT use the editor if you are unsure of what you are doing.
        ///
        ///Do NOT use this to import large &quot;flag lists&quot; made by other people that promise to improve performance or such. They are subject to the aforementioned issues, and they will cause problems for you since you will not be fully aware  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Menu_FastFlagEditor_Warning_Text {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Warning.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control how specific Roblox engine parameters and features are configured..
        /// </summary>
        public static string Menu_FastFlags_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage your own Fast Flags. Use with caution..
        /// </summary>
        public static string Menu_FastFlags_Editor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Editor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more about Fast Flags, what these presets do, and how to use them..
        /// </summary>
        public static string Menu_FastFlags_Help_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Help.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabling this will prevent anything configured here from being applied to Roblox..
        /// </summary>
        public static string Menu_FastFlags_ManagerEnabled_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.ManagerEnabled.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Bloxstrap to manage Fast Flags.
        /// </summary>
        public static string Menu_FastFlags_ManagerEnabled_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.ManagerEnabled.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rendering and Graphics.
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_Rendering {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.Rendering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Interface and Layout.
        /// </summary>
        public static string Menu_FastFlags_Presets_Categories_UserInterface {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Categories.UserInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Direct3D [exclusive fullscreen]({0}) using Alt+Enter is enabled by default..
        /// </summary>
        public static string Menu_FastFlags_Presets_D3DExclusiveFullscreenInfo {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.D3DExclusiveFullscreenInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable player shadows.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisablePlayerShadows_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisablePlayerShadows.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable post-processing effects.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisablePostFX_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisablePostFX.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable terrain textures.
        /// </summary>
        public static string Menu_FastFlags_Presets_DisableTerrainTextures_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.DisableTerrainTextures.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred escape menu version.
        /// </summary>
        public static string Menu_FastFlags_Presets_EscapeMenuVersion_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.EscapeMenuVersion.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox reduces your rendering quality depending on how your display is scaled in Windows..
        /// </summary>
        public static string Menu_FastFlags_Presets_FixDisplayScaling_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FixDisplayScaling.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preserve rendering quality with display scaling.
        /// </summary>
        public static string Menu_FastFlags_Presets_FixDisplayScaling_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FixDisplayScaling.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default value is 1. Adjust if you use a custom font..
        /// </summary>
        public static string Menu_FastFlags_Presets_FontPadding_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FontPadding.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font size.
        /// </summary>
        public static string Menu_FastFlags_Presets_FontPadding_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FontPadding.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to 0 for defaults if you want to use Roblox&apos;s native framerate unlocker..
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSLimit_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSLimit.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framerate limit.
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSLimit_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSLimit.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops it from showing whenever you move your mouse to the top of the screen..
        /// </summary>
        public static string Menu_FastFlags_Presets_FullscreenTitlebar_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FullscreenTitlebar.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable full-screen titlebar.
        /// </summary>
        public static string Menu_FastFlags_Presets_FullscreenTitlebar_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FullscreenTitlebar.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggled with [keyboard shortcuts]({0}). Only works if you&apos;re in the [Bloxstrap group]({1})..
        /// </summary>
        public static string Menu_FastFlags_Presets_HideGuis_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HideGuis.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable ability to hide GUIs.
        /// </summary>
        public static string Menu_FastFlags_Presets_HideGuis_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HideGuis.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chosen one will be force enabled in all games. [Beware, may cause lighting issues!]({0}).
        /// </summary>
        public static string Menu_FastFlags_Presets_LightingTechnology_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightingTechnology.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred lighting technology.
        /// </summary>
        public static string Menu_FastFlags_Presets_LightingTechnology_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightingTechnology.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-aliasing quality (MSAA).
        /// </summary>
        public static string Menu_FastFlags_Presets_MSAA_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MSAA.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rendering mode.
        /// </summary>
        public static string Menu_FastFlags_Presets_RenderingMode_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RenderingMode.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture quality.
        /// </summary>
        public static string Menu_FastFlags_Presets_TextureQuality_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.TextureQuality.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset everything to defaults.
        /// </summary>
        public static string Menu_FastFlags_Reset_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Reset.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Engine Settings.
        /// </summary>
        public static string Menu_FastFlags_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font files.
        /// </summary>
        public static string Menu_FontFiles {
            get {
                return ResourceManager.GetString("Menu.FontFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon files.
        /// </summary>
        public static string Menu_IconFiles {
            get {
                return ResourceManager.GetString("Menu.IconFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap cannot be installed here. Please choose a different location, or resort to using the default location by clicking the reset button..
        /// </summary>
        public static string Menu_InstallLocation_CantInstall {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.CantInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder you&apos;ve chosen to install Bloxstrap to already exists and is NOT empty. It is strongly recommended for Bloxstrap to be installed to its own independent folder.
        ///
        ///Changing to the following location is suggested:
        ///{0}
        ///
        ///Would you like to change to the suggested location?
        ///Selecting &apos;No&apos; will ignore this warning and continue installation..
        /// </summary>
        public static string Menu_InstallLocation_NotEmpty {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must set an install location.
        /// </summary>
        public static string Menu_InstallLocation_NotSet {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap does not have write access to the install location you&apos;ve selected. Please choose another location..
        /// </summary>
        public static string Menu_InstallLocation_NoWritePerms {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NoWritePerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activity tracking.
        /// </summary>
        public static string Menu_Integrations_ActivityTracking {
            get {
                return ResourceManager.GetString("Menu.Integrations.ActivityTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows for anybody to join the game you&apos;re currently in through your Discord profile..
        /// </summary>
        public static string Menu_Integrations_AllowActivityJoining_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowActivityJoining.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow activity joining.
        /// </summary>
        public static string Menu_Integrations_AllowActivityJoining_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowActivityJoining.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Location.
        /// </summary>
        public static string Menu_Integrations_Custom_AppLocation {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AppLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto close when Roblox closes.
        /// </summary>
        public static string Menu_Integrations_Custom_AutoClose {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AutoClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here, you can have other programs launch with Roblox automatically..
        /// </summary>
        public static string Menu_Integrations_Custom_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Arguments.
        /// </summary>
        public static string Menu_Integrations_Custom_LaunchArgs {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.LaunchArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox is running!.
        /// </summary>
        public static string Menu_Integrations_Custom_LaunchArgs_Placeholder {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.LaunchArgs.Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Integration.
        /// </summary>
        public static string Menu_Integrations_Custom_NewIntegration {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.NewIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No integration selected, please select or add a new one.
        /// </summary>
        public static string Menu_Integrations_Custom_NoneSelected {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.NoneSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Integrations.
        /// </summary>
        public static string Menu_Integrations_Custom_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure additional functionality to go alongside Roblox..
        /// </summary>
        public static string Menu_Integrations_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox will fully close when you leave a game instead of dropping you back into the app..
        /// </summary>
        public static string Menu_Integrations_DesktopApp_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.DesktopApp.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t exit to desktop app.
        /// </summary>
        public static string Menu_Integrations_DesktopApp_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.DesktopApp.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows for Bloxstrap to detect what Roblox game you&apos;re playing. Certain features may require this..
        /// </summary>
        public static string Menu_Integrations_EnableActivityTracking_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.EnableActivityTracking.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable activity tracking.
        /// </summary>
        public static string Menu_Integrations_EnableActivityTracking_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.EnableActivityTracking.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When in-game, you&apos;ll be able to see where your server is located via [ipinfo.io]({0})..
        /// </summary>
        public static string Menu_Integrations_QueryServerLocation_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.QueryServerLocation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query server location.
        /// </summary>
        public static string Menu_Integrations_QueryServerLocation_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.QueryServerLocation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature requires activity tracking to be enabled and the Discord desktop app to be installed and running. [Find out more]({0})..
        /// </summary>
        public static string Menu_Integrations_RequiresActivityTracking {
            get {
                return ResourceManager.GetString("Menu.Integrations.RequiresActivityTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the Roblox account you&apos;re playing with on your Discord profile..
        /// </summary>
        public static string Menu_Integrations_ShowAccountOnProfile_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowAccountOnProfile.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Roblox account.
        /// </summary>
        public static string Menu_Integrations_ShowAccountOnProfile_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowAccountOnProfile.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Roblox game you&apos;re playing will be shown on your Discord profile. [Not working?]({0}).
        /// </summary>
        public static string Menu_Integrations_ShowGameActivity_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowGameActivity.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show game activity.
        /// </summary>
        public static string Menu_Integrations_ShowGameActivity_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowGameActivity.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integrations.
        /// </summary>
        public static string Menu_Integrations_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage and apply file mods to the Roblox game client..
        /// </summary>
        public static string Menu_Mods_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See info about managing and creating mods..
        /// </summary>
        public static string Menu_Mods_Help_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Help.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure application parameters such as DPI scaling behaviour and [fullscreen optimizations]({0})..
        /// </summary>
        public static string Menu_Mods_Misc_CompatibilitySettings_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CompatibilitySettings.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage compatibility settings.
        /// </summary>
        public static string Menu_Mods_Misc_CompatibilitySettings_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CompatibilitySettings.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose font....
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Choose {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Choose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font size can be adjusted in the Fast Flags tab..
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file you have chosen does not appear to be a valid font file..
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Invalid {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove applied font.
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Remove {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use custom font.
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage custom Roblox mods here..
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Mods Folder.
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which type of emoji should Roblox use..
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The emoji mod can not be applied at this time..
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Error {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred emoji type.
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose between using two classic Roblox cursor styles..
        /// </summary>
        public static string Menu_Mods_Presets_MouseCursor_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.MouseCursor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse cursor.
        /// </summary>
        public static string Menu_Mods_Presets_MouseCursor_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.MouseCursor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bring back the old avatar editor background used in the Roblox app prior to 2020..
        /// </summary>
        public static string Menu_Mods_Presets_OldAvatarEditor_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldAvatarEditor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use old avatar editor background.
        /// </summary>
        public static string Menu_Mods_Presets_OldAvatarEditor_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldAvatarEditor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to roughly bring back the character sounds used prior to 2014..
        /// </summary>
        public static string Menu_Mods_Presets_OldCharacterSounds_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldCharacterSounds.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulate old character sounds.
        /// </summary>
        public static string Menu_Mods_Presets_OldCharacterSounds_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldCharacterSounds.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bring back the classic &apos;oof&apos; death sound..
        /// </summary>
        public static string Menu_Mods_Presets_OldDeathSound_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldDeathSound.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use old death sound.
        /// </summary>
        public static string Menu_Mods_Presets_OldDeathSound_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldDeathSound.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods.
        /// </summary>
        public static string Menu_Mods_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click for more information on this option..
        /// </summary>
        public static string Menu_MoreInfo {
            get {
                return ResourceManager.GetString("Menu.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Menu_Save {
            get {
                return ResourceManager.GetString("Menu.Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes will take effect the next time you launch Roblox..
        /// </summary>
        public static string Menu_SettingsSaved_Message {
            get {
                return ResourceManager.GetString("Menu.SettingsSaved.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings saved!.
        /// </summary>
        public static string Menu_SettingsSaved_Title {
            get {
                return ResourceManager.GetString("Menu.SettingsSaved.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure how Bloxstrap can be readily launched..
        /// </summary>
        public static string Menu_Shortcuts_Description {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to use Bloxstrap&apos;s range of Roblox icons for your shortcuts. [See how.]({0}).
        /// </summary>
        public static string Menu_Shortcuts_ExtractIcons_Description {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.ExtractIcons.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract Roblox icons to folder.
        /// </summary>
        public static string Menu_Shortcuts_ExtractIcons_Title {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.ExtractIcons.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create shortcuts for quick access to specific functions. These will all be placed on the Desktop..
        /// </summary>
        public static string Menu_Shortcuts_Function_Description {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.Function.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function.
        /// </summary>
        public static string Menu_Shortcuts_Function_Title {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.Function.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the shortcuts that bring up the multi-choice launch menu..
        /// </summary>
        public static string Menu_Shortcuts_General_Description {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.General.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string Menu_Shortcuts_General_Title {
            get {
                return ResourceManager.GetString("Menu.Shortcuts.General.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test mode.
        /// </summary>
        public static string Menu_TestMode {
            get {
                return ResourceManager.GetString("Menu.TestMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test mode makes it easier to iteratively test how your settings affect Roblox. 
        ///
        ///While enabled, it will automatically launch Roblox after closing Settings, and reopen Settings after closing Roblox, in a cycle until you disable it.
        ///
        ///Would you like to enable test mode?.
        /// </summary>
        public static string Menu_TestMode_Prompt {
            get {
                return ResourceManager.GetString("Menu.TestMode.Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap Settings.
        /// </summary>
        public static string Menu_Title {
            get {
                return ResourceManager.GetString("Menu.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have unsaved changes. Are you sure you want to close without saving?.
        /// </summary>
        public static string Menu_UnsavedChanges {
            get {
                return ResourceManager.GetString("Menu.UnsavedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icons.
        /// </summary>
        public static string Paths_Icons {
            get {
                return ResourceManager.GetString("Paths.Icons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to They&apos;ll be kept where Bloxstrap was installed, and will automatically be restored on a reinstall..
        /// </summary>
        public static string Uninstaller_KeepData_Description {
            get {
                return ResourceManager.GetString("Uninstaller.KeepData.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep my settings and mods.
        /// </summary>
        public static string Uninstaller_KeepData_Label {
            get {
                return ResourceManager.GetString("Uninstaller.KeepData.Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling will remove Bloxstrap from your system, and automatically reconfigure the default Roblox launcher if it&apos;s still installed.
        ///
        ///If you&apos;re uninstalling or reinstalling because you are having issues with Roblox, read [this help page]({0}) first.
        ///
        ///The uninstall process may not be able to fully clean up itself, so you may need to manually clean up leftover files where Bloxstrap was installed.
        ///
        ///Bloxstrap was installed at &quot;{1}&quot;..
        /// </summary>
        public static string Uninstaller_Text {
            get {
                return ResourceManager.GetString("Uninstaller.Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall Bloxstrap.
        /// </summary>
        public static string Uninstaller_Title {
            get {
                return ResourceManager.GetString("Uninstaller.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string Uninstaller_Uninstall {
            get {
                return ResourceManager.GetString("Uninstaller.Uninstall", resourceCulture);
            }
        }
    }
}
