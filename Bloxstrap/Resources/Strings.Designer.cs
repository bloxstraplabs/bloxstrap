//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bloxstrap.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Bloxstrap.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to left game.
        /// </summary>
        public static string ActivityTracker_LeftGame {
            get {
                return ResourceManager.GetString("ActivityTracker.LeftGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to lookup failed.
        /// </summary>
        public static string ActivityTracker_LookupFailed {
            get {
                return ResourceManager.GetString("ActivityTracker.LookupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap was unable to auto-update to {0}. Please update it manually by downloading and running the latest release from the GitHub page..
        /// </summary>
        public static string Bootstrapper_AutoUpdateFailed {
            get {
                return ResourceManager.GetString("Bootstrapper.AutoUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The channel you&apos;re currently on ({0}) is out of date, and appears to no longer be receiving updates.
        ///Would you like to switch to the default channel ({1})?.
        /// </summary>
        public static string Bootstrapper_ChannelOutOfDate {
            get {
                return ResourceManager.GetString("Bootstrapper.ChannelOutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s possible that something is preventing Bloxstrap from connecting to the internet. Please check and try again..
        /// </summary>
        public static string Bootstrapper_Connectivity_Preventing {
            get {
                return ResourceManager.GetString("Bootstrapper.Connectivity.Preventing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox may be down right now. See status.roblox.com for more information. Please try again later..
        /// </summary>
        public static string Bootstrapper_Connectivity_RobloxDown {
            get {
                return ResourceManager.GetString("Bootstrapper.Connectivity.RobloxDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap timed out when trying to connect to three different Roblox deployment mirrors, indicating a poor internet connection. Please try again later..
        /// </summary>
        public static string Bootstrapper_Connectivity_TimedOut {
            get {
                return ResourceManager.GetString("Bootstrapper.Connectivity.TimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox was launched via a deeplink, however the desktop app is required for deeplink launching to work. Because you&apos;ve opted to disable the desktop app, it will temporarily be re-enabled for this launch only..
        /// </summary>
        public static string Bootstrapper_DeeplinkTempEnabled {
            get {
                return ResourceManager.GetString("Bootstrapper.DeeplinkTempEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox has now finished rolling out the new game client update, featuring 64-bit support and the Hyperion anticheat. ReShade does not work with this update, and so it has now been disabled and removed from Bloxstrap.
        ///
        ///Your ReShade configuration files will still be saved, and you can locate them by opening the folder where Bloxstrap is installed to, and navigating to the Integrations folder. You can choose to delete these if you want..
        /// </summary>
        public static string Bootstrapper_HyperionUpdateInfo {
            get {
                return ResourceManager.GetString("Bootstrapper.HyperionUpdateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap does not have enough disk space to download and install Roblox. Please free up some disk space and try again..
        /// </summary>
        public static string Bootstrapper_NotEnoughSpace {
            get {
                return ResourceManager.GetString("Bootstrapper.NotEnoughSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying Roblox modifications....
        /// </summary>
        public static string Bootstrapper_Status_ApplyingModifications {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.ApplyingModifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuring {product}....
        /// </summary>
        public static string Bootstrapper_Status_Configuring {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Configuring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to Roblox....
        /// </summary>
        public static string Bootstrapper_Status_Connecting {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing {product}....
        /// </summary>
        public static string Bootstrapper_Status_Installing {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing WebView2, please wait....
        /// </summary>
        public static string Bootstrapper_Status_InstallingWebView2 {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.InstallingWebView2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting {product}....
        /// </summary>
        public static string Bootstrapper_Status_Starting {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling Bloxstrap....
        /// </summary>
        public static string Bootstrapper_Status_Uninstalling {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Uninstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrading {product}....
        /// </summary>
        public static string Bootstrapper_Status_Upgrading {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Upgrading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting the latest Bloxstrap....
        /// </summary>
        public static string Bootstrapper_Status_UpgradingBloxstrap {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.UpgradingBloxstrap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for other instances....
        /// </summary>
        public static string Bootstrapper_Status_WaitingOtherInstances {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.WaitingOtherInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style preview - Click the X button at the top right to close.
        /// </summary>
        public static string Bootstrapper_StylePreview_ImageCancel {
            get {
                return ResourceManager.GetString("Bootstrapper.StylePreview.ImageCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style preview - Click Cancel to close.
        /// </summary>
        public static string Bootstrapper_StylePreview_TextCancel {
            get {
                return ResourceManager.GetString("Bootstrapper.StylePreview.TextCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap has successfully installed.
        /// </summary>
        public static string Bootstrapper_SuccessfullyInstalled {
            get {
                return ResourceManager.GetString("Bootstrapper.SuccessfullyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap has successfully uninstalled.
        /// </summary>
        public static string Bootstrapper_SuccessfullyUninstalled {
            get {
                return ResourceManager.GetString("Bootstrapper.SuccessfullyUninstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox is currently running, but must be closed before uninstalling Bloxstrap. Would you like close Roblox now?.
        /// </summary>
        public static string Bootstrapper_Uninstall_RobloxRunning {
            get {
                return ResourceManager.GetString("Bootstrapper.Uninstall.RobloxRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox requires the use of Windows Media Foundation components. You appear to be missing them, likely because you are using an N edition of Windows. Please install them first, and then launch Roblox..
        /// </summary>
        public static string Bootstrapper_WMFNotFound {
            get {
                return ResourceManager.GetString("Bootstrapper.WMFNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse.
        /// </summary>
        public static string Common_Browse {
            get {
                return ResourceManager.GetString("Common.Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Common_Cancel {
            get {
                return ResourceManager.GetString("Common.Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Common_Close {
            get {
                return ResourceManager.GetString("Common.Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Common_Delete {
            get {
                return ResourceManager.GetString("Common.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord Rich Presence.
        /// </summary>
        public static string Common_DiscordRichPresence {
            get {
                return ResourceManager.GetString("Common.DiscordRichPresence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string Common_Help {
            get {
                return ResourceManager.GetString("Common.Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import JSON.
        /// </summary>
        public static string Common_ImportJson {
            get {
                return ResourceManager.GetString("Common.ImportJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locate log file.
        /// </summary>
        public static string Common_LocateLogFile {
            get {
                return ResourceManager.GetString("Common.LocateLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Miscellaneous.
        /// </summary>
        public static string Common_Miscellaneous {
            get {
                return ResourceManager.GetString("Common.Miscellaneous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Common_Name {
            get {
                return ResourceManager.GetString("Common.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        public static string Common_New {
            get {
                return ResourceManager.GetString("Common.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string Common_No {
            get {
                return ResourceManager.GetString("Common.No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string Common_OK {
            get {
                return ResourceManager.GetString("Common.OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Presets.
        /// </summary>
        public static string Common_Presets {
            get {
                return ResourceManager.GetString("Common.Presets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Common_Reset {
            get {
                return ResourceManager.GetString("Common.Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string Common_Value {
            get {
                return ResourceManager.GetString("Common.Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Common_Yes {
            get {
                return ResourceManager.GetString("Common.Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Roblox.
        /// </summary>
        public static string ContextMenu_CloseRoblox {
            get {
                return ResourceManager.GetString("ContextMenu.CloseRoblox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to close Roblox? This will forcefully end the process..
        /// </summary>
        public static string ContextMenu_CloseRobloxMessage {
            get {
                return ResourceManager.GetString("ContextMenu.CloseRobloxMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy invite deeplink.
        /// </summary>
        public static string ContextMenu_CopyDeeplinkInvite {
            get {
                return ResourceManager.GetString("ContextMenu.CopyDeeplinkInvite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep on top.
        /// </summary>
        public static string ContextMenu_LogTracer_KeepOnTop {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.KeepOnTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scroll to end.
        /// </summary>
        public static string ContextMenu_LogTracer_ScrollToEnd {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.ScrollToEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text wrapping.
        /// </summary>
        public static string ContextMenu_LogTracer_TextWrapping {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.TextWrapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log tracer.
        /// </summary>
        public static string ContextMenu_LogTracer_Title {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tracing {0}.
        /// </summary>
        public static string ContextMenu_LogTracer_TracingFormat {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.TracingFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open log tracer.
        /// </summary>
        public static string ContextMenu_OpenLogTracer {
            get {
                return ResourceManager.GetString("ContextMenu.OpenLogTracer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See server details.
        /// </summary>
        public static string ContextMenu_SeeServerDetails {
            get {
                return ResourceManager.GetString("ContextMenu.SeeServerDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Instance ID.
        /// </summary>
        public static string ContextMenu_ServerInformation_CopyInstanceId {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.CopyInstanceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance ID.
        /// </summary>
        public static string ContextMenu_ServerInformation_InstanceId {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.InstanceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading, please wait....
        /// </summary>
        public static string ContextMenu_ServerInformation_Loading {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location.
        /// </summary>
        public static string ContextMenu_ServerInformation_Location {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server information.
        /// </summary>
        public static string ContextMenu_ServerInformation_Title {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string ContextMenu_ServerInformation_Type {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} server.
        /// </summary>
        public static string ContextMenu_ServerInformation_TypeFormat {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.TypeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UDMUX proxied.
        /// </summary>
        public static string ContextMenu_ServerInformation_UdmuxProxied {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.UdmuxProxied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add FastFlag.
        /// </summary>
        public static string Dialog_AddFastFlag_Title {
            get {
                return ResourceManager.GetString("Dialog.AddFastFlag.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste in your JSON here....
        /// </summary>
        public static string Dialog_BulkAddFastFlag_Paste {
            get {
                return ResourceManager.GetString("Dialog.BulkAddFastFlag.Paste", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More information:.
        /// </summary>
        public static string Dialog_Connectivity_MoreInfo {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connectivity error.
        /// </summary>
        public static string Dialog_Connectivity_Title {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap is unable to connect to {0}.
        /// </summary>
        public static string Dialog_Connectivity_UnableToConnect {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.UnableToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy log contents.
        /// </summary>
        public static string Dialog_Exception_CopyLogContents {
            get {
                return ResourceManager.GetString("Dialog.Exception.CopyLogContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception occurred while running Bloxstrap.
        /// </summary>
        public static string Dialog_Exception_Info_1 {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please report this exception through a GitHub issue or in our Discord chat, along with a copy of the log file that was created..
        /// </summary>
        public static string Dialog_Exception_Info_2 {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit report....
        /// </summary>
        public static string Dialog_Exception_SubmitReport {
            get {
                return ResourceManager.GetString("Dialog.Exception.SubmitReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit report via Discord.
        /// </summary>
        public static string Dialog_Exception_SubmitReportDiscord {
            get {
                return ResourceManager.GetString("Dialog.Exception.SubmitReportDiscord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit report via GitHub.
        /// </summary>
        public static string Dialog_Exception_SubmitReportGithub {
            get {
                return ResourceManager.GetString("Dialog.Exception.SubmitReportGithub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap Exception.
        /// </summary>
        public static string Dialog_Exception_Title {
            get {
                return ResourceManager.GetString("Dialog.Exception.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2008.
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2008 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2011.
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2011 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2017.
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2017 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2017", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2019.
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2019 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2019", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2022.
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2022 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2022", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap.
        /// </summary>
        public static string Enums_BootstrapperIcon_IconBloxstrap {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconBloxstrap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        public static string Enums_BootstrapperIcon_IconCustom {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Early 2015.
        /// </summary>
        public static string Enums_BootstrapperIcon_IconEarly2015 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconEarly2015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Late 2015.
        /// </summary>
        public static string Enums_BootstrapperIcon_IconLate2015 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconLate2015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fake Byfron (2023).
        /// </summary>
        public static string Enums_BootstrapperStyle_ByfronDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ByfronDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fluent.
        /// </summary>
        public static string Enums_BootstrapperStyle_FluentDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.FluentDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy (2008 - 2011).
        /// </summary>
        public static string Enums_BootstrapperStyle_LegacyDialog2008 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.LegacyDialog2008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legacy (2011 - 2014).
        /// </summary>
        public static string Enums_BootstrapperStyle_LegacyDialog2011 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.LegacyDialog2011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress (~2014).
        /// </summary>
        public static string Enums_BootstrapperStyle_ProgressDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ProgressDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fluent Progress (Aero).
        /// </summary>
        public static string Enums_BootstrapperStyle_ProgressFluentAeroDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ProgressFluentAeroDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fluent Progress.
        /// </summary>
        public static string Enums_BootstrapperStyle_ProgressFluentDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ProgressFluentDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vista (2008 - 2011).
        /// </summary>
        public static string Enums_BootstrapperStyle_VistaDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.VistaDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change automatically.
        /// </summary>
        public static string Enums_ChannelChangeMode_Automatic {
            get {
                return ResourceManager.GetString("Enums.ChannelChangeMode.Automatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never change.
        /// </summary>
        public static string Enums_ChannelChangeMode_Ignore {
            get {
                return ResourceManager.GetString("Enums.ChannelChangeMode.Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always prompt.
        /// </summary>
        public static string Enums_ChannelChangeMode_Prompt {
            get {
                return ResourceManager.GetString("Enums.ChannelChangeMode.Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Enums_CursorType_Default {
            get {
                return ResourceManager.GetString("Enums.CursorType.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2006 (Cartoony).
        /// </summary>
        public static string Enums_CursorType_From2006 {
            get {
                return ResourceManager.GetString("Enums.CursorType.From2006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2013 (Angular).
        /// </summary>
        public static string Enums_CursorType_From2013 {
            get {
                return ResourceManager.GetString("Enums.CursorType.From2013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catmoji.
        /// </summary>
        public static string Enums_EmojiType_Catmoji {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Catmoji", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default (Twemoji).
        /// </summary>
        public static string Enums_EmojiType_Default {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 10.
        /// </summary>
        public static string Enums_EmojiType_Windows10 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 11.
        /// </summary>
        public static string Enums_EmojiType_Windows11 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows 8.
        /// </summary>
        public static string Enums_EmojiType_Windows8 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version 1 (2015).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V1 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version 2 (2020).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V2 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version 4 (2023).
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V4 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chosen by game.
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Future (Phase 3).
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Future {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Future", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shadow Map (Phase 2).
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_ShadowMap {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.ShadowMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voxel (Phase 1).
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Voxel {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Voxel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chosen by game.
        /// </summary>
        public static string Enums_FlagPresets_MaterialVersion_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MaterialVersion.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New (2022).
        /// </summary>
        public static string Enums_FlagPresets_MaterialVersion_New {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MaterialVersion.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old (Pre-2022).
        /// </summary>
        public static string Enums_FlagPresets_MaterialVersion_Old {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MaterialVersion.Old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic.
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1x MSAA.
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_x1 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.x1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2x MSAA.
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_x2 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.x2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 4x MSAA.
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_x4 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.x4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8x MSAA.
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_x8 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.x8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to D3D10.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_D3D10 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.D3D10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to D3D11.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_D3D11 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.D3D11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenGL.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_OpenGL {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.OpenGL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vulkan.
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_Vulkan {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.Vulkan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private.
        /// </summary>
        public static string Enums_ServerType_Private {
            get {
                return ResourceManager.GetString("Enums.ServerType.Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public.
        /// </summary>
        public static string Enums_ServerType_Public {
            get {
                return ResourceManager.GetString("Enums.ServerType.Public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reserved.
        /// </summary>
        public static string Enums_ServerType_Reserved {
            get {
                return ResourceManager.GetString("Enums.ServerType.Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark.
        /// </summary>
        public static string Enums_Theme_Dark {
            get {
                return ResourceManager.GetString("Enums.Theme.Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to System Default.
        /// </summary>
        public static string Enums_Theme_Default {
            get {
                return ResourceManager.GetString("Enums.Theme.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        public static string Enums_Theme_Light {
            get {
                return ResourceManager.GetString("Enums.Theme.Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap has detected a drive letter change and has reconfigured its install location from the {0} drive to the {1} drive.
        ///
        ///While Bloxstrap will continue to work, it&apos;s recommended that you change the drive letter back to its original value as other installed applications can experience similar issues..
        /// </summary>
        public static string InstallChecker_DriveLetterChangeDetected {
            get {
                return ResourceManager.GetString("InstallChecker.DriveLetterChangeDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap was originally installed to the {0} drive, but it appears to no longer be present. Would you like to continue and carry out a fresh install?.
        /// </summary>
        public static string InstallChecker_InstallDriveMissing {
            get {
                return ResourceManager.GetString("InstallChecker.InstallDriveMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It appears as if Bloxstrap hasn&apos;t been properly installed. Is it supposed to be installed at {0}?.
        /// </summary>
        public static string InstallChecker_NotInstalledProperly {
            get {
                return ResourceManager.GetString("InstallChecker.NotInstalledProperly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See what&apos;s new in this version.
        /// </summary>
        public static string InstallChecker_SeeWhatsNew {
            get {
                return ResourceManager.GetString("InstallChecker.SeeWhatsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap has been upgraded to v{0}.
        /// </summary>
        public static string InstallChecker_Updated {
            get {
                return ResourceManager.GetString("InstallChecker.Updated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of Bloxstrap you&apos;ve launched is different to the version you currently have installed.
        ///Would you like to upgrade your currently installed version?.
        /// </summary>
        public static string InstallChecker_VersionDifferentThanInstalled {
            get {
                return ResourceManager.GetString("InstallChecker.VersionDifferentThanInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit Hash.
        /// </summary>
        public static string Menu_About_BuildCommitHash {
            get {
                return ResourceManager.GetString("Menu.About.BuildCommitHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build Information.
        /// </summary>
        public static string Menu_About_BuildInformation {
            get {
                return ResourceManager.GetString("Menu.About.BuildInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Machine.
        /// </summary>
        public static string Menu_About_BuildMachine {
            get {
                return ResourceManager.GetString("Menu.About.BuildMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit Ref.
        /// </summary>
        public static string Menu_About_BuildRef {
            get {
                return ResourceManager.GetString("Menu.About.BuildRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timestamp.
        /// </summary>
        public static string Menu_About_BuildTimestamp {
            get {
                return ResourceManager.GetString("Menu.About.BuildTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contributors.
        /// </summary>
        public static string Menu_About_Contributors {
            get {
                return ResourceManager.GetString("Menu.About.Contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code.
        /// </summary>
        public static string Menu_About_Contributors_Code {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the people who have made notable contributions to Bloxstrap, helping make it what it is..
        /// </summary>
        public static string Menu_About_Contributors_Description {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feature Ideas.
        /// </summary>
        public static string Menu_About_Contributors_FeatureIdeas {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.FeatureIdeas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translations.
        /// </summary>
        public static string Menu_About_Contributors_Translations {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Translations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An open-source, feature-packed alternative bootstrapper for Roblox.
        /// </summary>
        public static string Menu_About_Description_1 {
            get {
                return ResourceManager.GetString("Menu.About.Description.1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Developed by pizzaboxer - if you like this, please consider leaving a star on GitHub!.
        /// </summary>
        public static string Menu_About_Description_2 {
            get {
                return ResourceManager.GetString("Menu.About.Description.2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord server.
        /// </summary>
        public static string Menu_About_DiscordServer {
            get {
                return ResourceManager.GetString("Menu.About.DiscordServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub repository.
        /// </summary>
        public static string Menu_About_GithubRepository {
            get {
                return ResourceManager.GetString("Menu.About.GithubRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help and Information.
        /// </summary>
        public static string Menu_About_HelpInformation {
            get {
                return ResourceManager.GetString("Menu.About.HelpInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licenses.
        /// </summary>
        public static string Menu_About_Licenses {
            get {
                return ResourceManager.GetString("Menu.About.Licenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report an issue.
        /// </summary>
        public static string Menu_About_ReportIssue {
            get {
                return ResourceManager.GetString("Menu.About.ReportIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string Menu_About_Title {
            get {
                return ResourceManager.GetString("Menu.About.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using an unreleased version, I see?.
        /// </summary>
        public static string Menu_About_UnreleasedVersion {
            get {
                return ResourceManager.GetString("Menu.About.UnreleasedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0}.
        /// </summary>
        public static string Menu_About_Version {
            get {
                return ResourceManager.GetString("Menu.About.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All files.
        /// </summary>
        public static string Menu_AllFiles {
            get {
                return ResourceManager.GetString("Menu.AllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap is currently running, likely as a background Roblox process. Please note that not all your changes will immediately apply until you close all currently open Roblox instances..
        /// </summary>
        public static string Menu_AlreadyRunning {
            get {
                return ResourceManager.GetString("Menu.AlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can make it look different, retro, or even just like Roblox..
        /// </summary>
        public static string Menu_Appearance_Bootstrapper_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Bootstrapper.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrapper.
        /// </summary>
        public static string Menu_Appearance_Bootstrapper_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Bootstrapper.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure other miscellaneous customisable options..
        /// </summary>
        public static string Menu_Appearance_Customisation_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Customisation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customisation.
        /// </summary>
        public static string Menu_Appearance_Customisation_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Customisation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be a multi-size .ico file with sizes 16px to 128px. Set Icon as &apos;Custom&apos; to use it..
        /// </summary>
        public static string Menu_Appearance_CustomisationIcon_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationIcon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Icon.
        /// </summary>
        public static string Menu_Appearance_CustomisationIcon_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationIcon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The text that shows as the title of the bootstrapper..
        /// </summary>
        public static string Menu_Appearance_CustomisationTitle_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationTitle.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title.
        /// </summary>
        public static string Menu_Appearance_CustomisationTitle_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationTitle.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure how Bloxstrap should look..
        /// </summary>
        public static string Menu_Appearance_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark theme does not apply to Legacy or Vista styles..
        /// </summary>
        public static string Menu_Appearance_Global_Theme_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Global.Theme.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global Theme.
        /// </summary>
        public static string Menu_Appearance_Global_Theme_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Global.Theme.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose what icon it should use..
        /// </summary>
        public static string Menu_Appearance_Icon_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Icon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon.
        /// </summary>
        public static string Menu_Appearance_Icon_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Icon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview.
        /// </summary>
        public static string Menu_Appearance_Preview {
            get {
                return ResourceManager.GetString("Menu.Appearance.Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose how it should look. Dark theme does not apply to Legacy/Vista..
        /// </summary>
        public static string Menu_Appearance_Style_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Style.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Style.
        /// </summary>
        public static string Menu_Appearance_Style_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Style.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appearance.
        /// </summary>
        public static string Menu_Appearance_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox or Bloxstrap may try to change your preferred channel..
        /// </summary>
        public static string Menu_Behaviour_AutoChannelChange_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoChannelChange.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic channel change action.
        /// </summary>
        public static string Menu_Behaviour_AutoChannelChange_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoChannelChange.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap will automatically check and update itself when launching Roblox..
        /// </summary>
        public static string Menu_Behaviour_AutoUpdate_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoUpdate.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically update Bloxstrap.
        /// </summary>
        public static string Menu_Behaviour_AutoUpdate_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoUpdate.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deployed.
        /// </summary>
        public static string Menu_Behaviour_Channel_Deployed {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Deployed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which deployment channel Roblox should be downloaded from..
        /// </summary>
        public static string Menu_Behaviour_Channel_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified channel name does not exist..
        /// </summary>
        public static string Menu_Behaviour_Channel_DoesNotExist {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to fetch information!.
        /// </summary>
        public static string Menu_Behaviour_Channel_FetchFailed {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.FetchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching latest deploy info, please wait....
        /// </summary>
        public static string Menu_Behaviour_Channel_Fetching {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Fetching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This channel is out of date, and is likely no longer being updated. Please use another channel..
        /// </summary>
        public static string Menu_Behaviour_Channel_Outdated {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Outdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channel.
        /// </summary>
        public static string Menu_Behaviour_Channel_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string Menu_Behaviour_Channel_Version {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version GUID.
        /// </summary>
        public static string Menu_Behaviour_Channel_VersionGuid {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.VersionGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap will place an icon on the desktop that launches Roblox the next time it launches..
        /// </summary>
        public static string Menu_Behaviour_CreateDesktopIcon_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.CreateDesktopIcon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create desktop icon.
        /// </summary>
        public static string Menu_Behaviour_CreateDesktopIcon_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.CreateDesktopIcon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure what Bloxstrap should do when launching..
        /// </summary>
        public static string Menu_Behaviour_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox will be installed fresh on next launch..
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxReinstall_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxReinstall.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force Roblox reinstallation.
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxReinstall_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxReinstall.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Behaviour.
        /// </summary>
        public static string Menu_Behaviour_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new.
        /// </summary>
        public static string Menu_FastFlagEditor_AddNew {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.AddNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back.
        /// </summary>
        public static string Menu_FastFlagEditor_Back {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete selected.
        /// </summary>
        public static string Menu_FastFlagEditor_DeleteSelected {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.DeleteSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage your own FastFlags. Double click a column to edit..
        /// </summary>
        public static string Menu_FastFlagEditor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search.
        /// </summary>
        public static string Menu_FastFlagEditor_Search {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show preset flags.
        /// </summary>
        public static string Menu_FastFlagEditor_ShowPresetFlags {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ShowPresetFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fast Flag Editor.
        /// </summary>
        public static string Menu_FastFlagEditor_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Control how specific Roblox engine parameters and features are configured..
        /// </summary>
        public static string Menu_FastFlags_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage your own FastFlags..
        /// </summary>
        public static string Menu_FastFlags_Editor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Editor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more about FastFlags..
        /// </summary>
        public static string Menu_FastFlags_Help_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Help.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle between using the consolidated 1-10 / fine-grained 1-21 graphics quality slider..
        /// </summary>
        public static string Menu_FastFlags_Presets_AltGraphicsSelector_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.AltGraphicsSelector.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use alternate graphics quality selector.
        /// </summary>
        public static string Menu_FastFlags_Presets_AltGraphicsSelector_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.AltGraphicsSelector.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FastFlag preset for Direct3D [exclusive fullscreen]({0}) using Alt+Enter is already enabled by default..
        /// </summary>
        public static string Menu_FastFlags_Presets_D3DExclusiveFullscreenInfo {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.D3DExclusiveFullscreenInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show values of specified flags during runtime. Each flag is comma separated..
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_FlagStateOverlay_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.FlagStateOverlay.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flag state overlay.
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_FlagStateOverlay_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.FlagStateOverlay.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set blank if not using a proxy. Don&apos;t forget to add cacert.pem as a mod..
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_HttpProxyAddress_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.HttpProxyAddress.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP proxy address.
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_HttpProxyAddress_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.HttpProxyAddress.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables logging of HTTP requests (DFLogHttpTraceLight=12)..
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_HttpRequestLogging_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.HttpRequestLogging.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HTTP request logging.
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_HttpRequestLogging_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.HttpRequestLogging.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug.
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which version of the escape menu to use..
        /// </summary>
        public static string Menu_FastFlags_Presets_EscapeMenuVersion_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.EscapeMenuVersion.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred escape menu version.
        /// </summary>
        public static string Menu_FastFlags_Presets_EscapeMenuVersion_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.EscapeMenuVersion.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox reduces your rendering quality, depending on display scaling. This toggle disables that..
        /// </summary>
        public static string Menu_FastFlags_Presets_FixDisplayScaling_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FixDisplayScaling.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preserve rendering quality with display scaling.
        /// </summary>
        public static string Menu_FastFlags_Presets_FixDisplayScaling_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FixDisplayScaling.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a large number like 9999 for no limit. Set as 0 for defaults..
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSLimit_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSLimit.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framerate limit.
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSLimit_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSLimit.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggled with [keyboard shortcuts]({0}). Only works if you&apos;re in the [Bloxstrap group]({1})..
        /// </summary>
        public static string Menu_FastFlags_Presets_HideGuis_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HideGuis.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable ability to hide GUIs.
        /// </summary>
        public static string Menu_FastFlags_Presets_HideGuis_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HideGuis.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which lighting technology should be forced enabled in all games..
        /// </summary>
        public static string Menu_FastFlags_Presets_LightingTechnology_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightingTechnology.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred lighting technology.
        /// </summary>
        public static string Menu_FastFlags_Presets_LightingTechnology_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightingTechnology.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which material version should be forced in all games..
        /// </summary>
        public static string Menu_FastFlags_Presets_Materials_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Materials.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred materials.
        /// </summary>
        public static string Menu_FastFlags_Presets_Materials_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Materials.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More information on this preset.
        /// </summary>
        public static string Menu_FastFlags_Presets_MoreInfo {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose what renderer Roblox should use. VR requires Direct3D/Automatic..
        /// </summary>
        public static string Menu_FastFlags_Presets_RenderingMode_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RenderingMode.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rendering mode.
        /// </summary>
        public static string Menu_FastFlags_Presets_RenderingMode_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RenderingMode.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fast Flags.
        /// </summary>
        public static string Menu_FastFlags_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font files.
        /// </summary>
        public static string Menu_FontFiles {
            get {
                return ResourceManager.GetString("Menu.FontFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Icon files.
        /// </summary>
        public static string Menu_IconFiles {
            get {
                return ResourceManager.GetString("Menu.IconFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Menu_Install {
            get {
                return ResourceManager.GetString("Menu.Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure how Bloxstrap/Roblox is installed..
        /// </summary>
        public static string Menu_Installation_Description {
            get {
                return ResourceManager.GetString("Menu.Installation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose where Bloxstrap should be installed to..
        /// </summary>
        public static string Menu_Installation_InstallLocation_Description {
            get {
                return ResourceManager.GetString("Menu.Installation.InstallLocation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Location.
        /// </summary>
        public static string Menu_Installation_InstallLocation_Title {
            get {
                return ResourceManager.GetString("Menu.Installation.InstallLocation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Where Bloxstrap is currently installed to..
        /// </summary>
        public static string Menu_Installation_OpenInstallFolder_Description {
            get {
                return ResourceManager.GetString("Menu.Installation.OpenInstallFolder.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Installation Folder.
        /// </summary>
        public static string Menu_Installation_OpenInstallFolder_Title {
            get {
                return ResourceManager.GetString("Menu.Installation.OpenInstallFolder.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation.
        /// </summary>
        public static string Menu_Installation_Title {
            get {
                return ResourceManager.GetString("Menu.Installation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here&apos;s a guide on how to uninstall Bloxstrap..
        /// </summary>
        public static string Menu_Installation_UninstallGuide_Description {
            get {
                return ResourceManager.GetString("Menu.Installation.UninstallGuide.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looking to uninstall?.
        /// </summary>
        public static string Menu_Installation_UninstallGuide_Title {
            get {
                return ResourceManager.GetString("Menu.Installation.UninstallGuide.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap cannot be installed here. Please choose a different location, or resort to using the default location by clicking the reset button..
        /// </summary>
        public static string Menu_InstallLocation_CantInstall {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.CantInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder you&apos;ve chosen to install Bloxstrap to already exists and is NOT empty. It is strongly recommended for Bloxstrap to be installed to its own independent folder.
        ///
        ///Changing to the following location is suggested:
        ///{0}
        ///
        ///Would you like to change to the suggested location?
        ///Selecting &apos;No&apos; will ignore this warning and continue installation..
        /// </summary>
        public static string Menu_InstallLocation_NotEmpty {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must set an install location.
        /// </summary>
        public static string Menu_InstallLocation_NotSet {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap does not have write access to the install location you&apos;ve selected. Please choose another location..
        /// </summary>
        public static string Menu_InstallLocation_NoWritePerms {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NoWritePerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activity tracking.
        /// </summary>
        public static string Menu_Integrations_ActivityTracking {
            get {
                return ResourceManager.GetString("Menu.Integrations.ActivityTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows for anybody to join the game you&apos;re currently in through your Discord profile..
        /// </summary>
        public static string Menu_Integrations_AllowActivityJoining_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowActivityJoining.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow activity joining.
        /// </summary>
        public static string Menu_Integrations_AllowActivityJoining_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowActivityJoining.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows for having more than one Roblox game client instance open simultaneously..
        /// </summary>
        public static string Menu_Integrations_AllowMultipleInstances_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowMultipleInstances.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow multi-instance launching.
        /// </summary>
        public static string Menu_Integrations_AllowMultipleInstances_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowMultipleInstances.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Location.
        /// </summary>
        public static string Menu_Integrations_Custom_AppLocation {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AppLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to e.g. C:\Windows\System32\cmd.exe.
        /// </summary>
        public static string Menu_Integrations_Custom_AppLocation_Placeholder {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AppLocation.Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto close when Roblox closes.
        /// </summary>
        public static string Menu_Integrations_Custom_AutoClose {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AutoClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here, you can have other programs launch with Roblox automatically..
        /// </summary>
        public static string Menu_Integrations_Custom_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Arguments.
        /// </summary>
        public static string Menu_Integrations_Custom_LaunchArgs {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.LaunchArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to e.g. /k echo Roblox is running!.
        /// </summary>
        public static string Menu_Integrations_Custom_LaunchArgs_Placeholder {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.LaunchArgs.Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Integration.
        /// </summary>
        public static string Menu_Integrations_Custom_NewIntegration {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.NewIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No integration selected, please select or add a new one.
        /// </summary>
        public static string Menu_Integrations_Custom_NoneSelected {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.NoneSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Integrations.
        /// </summary>
        public static string Menu_Integrations_Custom_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure quick and easy ways to improve the Roblox gameplay experience..
        /// </summary>
        public static string Menu_Integrations_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows for Bloxstrap to detect what Roblox game you&apos;re playing. Certain features may require this..
        /// </summary>
        public static string Menu_Integrations_EnableActivityTracking_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.EnableActivityTracking.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable activity tracking.
        /// </summary>
        public static string Menu_Integrations_EnableActivityTracking_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.EnableActivityTracking.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More information on this integration.
        /// </summary>
        public static string Menu_Integrations_MoreInfo {
            get {
                return ResourceManager.GetString("Menu.Integrations.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature requires activity tracking to be enabled..
        /// </summary>
        public static string Menu_Integrations_RequiresActivityTracking {
            get {
                return ResourceManager.GetString("Menu.Integrations.RequiresActivityTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When playing a Roblox game, the game you&apos;re playing will show on your Discord profile activity..
        /// </summary>
        public static string Menu_Integrations_ShowGameActivity_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowGameActivity.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show game activity.
        /// </summary>
        public static string Menu_Integrations_ShowGameActivity_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowGameActivity.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you join a game, you&apos;ll be notified of where your server&apos;s located. Won&apos;t show in fullscreen..
        /// </summary>
        public static string Menu_Integrations_ShowServerDetails_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowServerDetails.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See server location when joining a game.
        /// </summary>
        public static string Menu_Integrations_ShowServerDetails_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowServerDetails.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integrations.
        /// </summary>
        public static string Menu_Integrations_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage and apply file mods to the Roblox game client..
        /// </summary>
        public static string Menu_Mods_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See info about managing and creating mods..
        /// </summary>
        public static string Menu_Mods_Help_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Help.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose font....
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Choose {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Choose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forces every in-game font to be a font that you choose..
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove applied font.
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Remove {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply custom font.
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Windows feature that may conflict with performance in full-screen..
        /// </summary>
        public static string Menu_Mods_Misc_DisableFullscreenOptimisations_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.DisableFullscreenOptimisations.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable fullscreen optimisations.
        /// </summary>
        public static string Menu_Mods_Misc_DisableFullscreenOptimisations_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.DisableFullscreenOptimisations.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage custom Roblox mods here..
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap must first be installed..
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_MustBeInstalled {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.MustBeInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Mods Folder.
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops the desktop app from showing, especially when you leave a game..
        /// </summary>
        public static string Menu_Mods_Presets_DisableDesktopApp_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.DisableDesktopApp.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable desktop app.
        /// </summary>
        public static string Menu_Mods_Presets_DisableDesktopApp_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.DisableDesktopApp.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which type of emoji should Roblox use..
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred emoji type.
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose between using two classic Roblox cursor styles..
        /// </summary>
        public static string Menu_Mods_Presets_MouseCursor_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.MouseCursor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse cursor.
        /// </summary>
        public static string Menu_Mods_Presets_MouseCursor_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.MouseCursor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bring back the old avatar editor background used in the Roblox app prior to 2020..
        /// </summary>
        public static string Menu_Mods_Presets_OldAvatarEditor_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldAvatarEditor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use old avatar editor background.
        /// </summary>
        public static string Menu_Mods_Presets_OldAvatarEditor_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldAvatarEditor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attempt to roughly bring back the character sounds used prior to 2014..
        /// </summary>
        public static string Menu_Mods_Presets_OldCharacterSounds_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldCharacterSounds.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulate old character sounds.
        /// </summary>
        public static string Menu_Mods_Presets_OldCharacterSounds_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldCharacterSounds.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bring back the classic &apos;oof&apos; death sound..
        /// </summary>
        public static string Menu_Mods_Presets_OldDeathSound_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldDeathSound.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use old death sound.
        /// </summary>
        public static string Menu_Mods_Presets_OldDeathSound_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldDeathSound.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods.
        /// </summary>
        public static string Menu_Mods_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click for more information on this option..
        /// </summary>
        public static string Menu_MoreInfo {
            get {
                return ResourceManager.GetString("Menu.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s just a few things you first should know about..
        /// </summary>
        public static string Menu_PreInstall_Description {
            get {
                return ResourceManager.GetString("Menu.PreInstall.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After installation has finished, the Bloxstrap Menu will be registered as an application in the Start menu. If you ever need to access it again to re-adjust your settings, or access resources such as FastFlag management, you can find it there..
        /// </summary>
        public static string Menu_PreInstall_Info_1 {
            get {
                return ResourceManager.GetString("Menu.PreInstall.Info.1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you ever need help or guidance with anything, be sure to check the [Wiki]({0}). If you still need something, open an [issue]({1}) on GitHub, or join our [Discord server]({2})..
        /// </summary>
        public static string Menu_PreInstall_Info_2 {
            get {
                return ResourceManager.GetString("Menu.PreInstall.Info.2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Before you install....
        /// </summary>
        public static string Menu_PreInstall_Title {
            get {
                return ResourceManager.GetString("Menu.PreInstall.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Menu_Save {
            get {
                return ResourceManager.GetString("Menu.Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bloxstrap Menu.
        /// </summary>
        public static string Menu_Title {
            get {
                return ResourceManager.GetString("Menu.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roblox is attempting to set your channel to {0}, however your current preferred channel is {1}.
        ///
        ///Would you like to switch your preferred channel to {0}?.
        /// </summary>
        public static string ProtocolHandler_RobloxSwitchedChannel {
            get {
                return ResourceManager.GetString("ProtocolHandler.RobloxSwitchedChannel", resourceCulture);
            }
        }
    }
}
