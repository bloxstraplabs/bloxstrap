//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bloxstrap.Resources {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Bloxstrap.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   left game に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ActivityTracker_LeftGame {
            get {
                return ResourceManager.GetString("ActivityTracker.LeftGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   lookup failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ActivityTracker_LookupFailed {
            get {
                return ResourceManager.GetString("ActivityTracker.LookupFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap was unable to auto-update to {0}. Please update it manually by downloading and running the latest release from the GitHub page. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_AutoUpdateFailed {
            get {
                return ResourceManager.GetString("Bootstrapper.AutoUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The channel you&apos;re currently on ({0}) is out of date, and appears to no longer be receiving updates.
        ///Would you like to switch to the default channel ({1})? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_ChannelOutOfDate {
            get {
                return ResourceManager.GetString("Bootstrapper.ChannelOutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It&apos;s possible that something is preventing Bloxstrap from connecting to the internet. Please check and try again. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Connectivity_Preventing {
            get {
                return ResourceManager.GetString("Bootstrapper.Connectivity.Preventing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roblox may be down right now. See status.roblox.com for more information. Please try again later. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Connectivity_RobloxDown {
            get {
                return ResourceManager.GetString("Bootstrapper.Connectivity.RobloxDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap timed out when trying to connect to three different Roblox deployment mirrors, indicating a poor internet connection. Please try again later. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Connectivity_TimedOut {
            get {
                return ResourceManager.GetString("Bootstrapper.Connectivity.TimedOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roblox was launched via a deeplink, however the desktop app is required for deeplink launching to work. Because you&apos;ve opted to disable the desktop app, it will temporarily be re-enabled for this launch only. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_DeeplinkTempEnabled {
            get {
                return ResourceManager.GetString("Bootstrapper.DeeplinkTempEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roblox has now finished rolling out the new game client update, featuring 64-bit support and the Hyperion anticheat. ReShade does not work with this update, and so it has now been disabled and removed from Bloxstrap.
        ///
        ///Your ReShade configuration files will still be saved, and you can locate them by opening the folder where Bloxstrap is installed to, and navigating to the Integrations folder. You can choose to delete these if you want. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_HyperionUpdateInfo {
            get {
                return ResourceManager.GetString("Bootstrapper.HyperionUpdateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap does not have enough disk space to download and install Roblox. Please free up some disk space and try again. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_NotEnoughSpace {
            get {
                return ResourceManager.GetString("Bootstrapper.NotEnoughSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Applying Roblox modifications... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_ApplyingModifications {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.ApplyingModifications", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configuring {product}... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_Configuring {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Configuring", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connecting to Roblox... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_Connecting {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Connecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Installing {product}... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_Installing {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Installing WebView2, please wait... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_InstallingWebView2 {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.InstallingWebView2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Starting {product}... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_Starting {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Uninstalling Bloxstrap... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_Uninstalling {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Uninstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Upgrading {product}... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_Upgrading {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.Upgrading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Getting the latest Bloxstrap... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_UpgradingBloxstrap {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.UpgradingBloxstrap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Waiting for other instances... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Status_WaitingOtherInstances {
            get {
                return ResourceManager.GetString("Bootstrapper.Status.WaitingOtherInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Style preview - Click the X button at the top right to close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_StylePreview_ImageCancel {
            get {
                return ResourceManager.GetString("Bootstrapper.StylePreview.ImageCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Style preview - Click Cancel to close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_StylePreview_TextCancel {
            get {
                return ResourceManager.GetString("Bootstrapper.StylePreview.TextCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap has successfully installed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_SuccessfullyInstalled {
            get {
                return ResourceManager.GetString("Bootstrapper.SuccessfullyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap has successfully uninstalled に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_SuccessfullyUninstalled {
            get {
                return ResourceManager.GetString("Bootstrapper.SuccessfullyUninstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roblox is currently running, but must be closed before uninstalling Bloxstrap. Would you like close Roblox now? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_Uninstall_RobloxRunning {
            get {
                return ResourceManager.GetString("Bootstrapper.Uninstall.RobloxRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roblox requires the use of Windows Media Foundation components. You appear to be missing them, likely because you are using an N edition of Windows. Please install them first, and then launch Roblox. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Bootstrapper_WMFNotFound {
            get {
                return ResourceManager.GetString("Bootstrapper.WMFNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Browse に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Browse {
            get {
                return ResourceManager.GetString("Common.Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Cancel {
            get {
                return ResourceManager.GetString("Common.Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Close {
            get {
                return ResourceManager.GetString("Common.Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Delete {
            get {
                return ResourceManager.GetString("Common.Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Discord Rich Presence に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_DiscordRichPresence {
            get {
                return ResourceManager.GetString("Common.DiscordRichPresence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Help に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Help {
            get {
                return ResourceManager.GetString("Common.Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Import JSON に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_ImportJson {
            get {
                return ResourceManager.GetString("Common.ImportJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Locate log file に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_LocateLogFile {
            get {
                return ResourceManager.GetString("Common.LocateLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Miscellaneous に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Miscellaneous {
            get {
                return ResourceManager.GetString("Common.Miscellaneous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Name に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Name {
            get {
                return ResourceManager.GetString("Common.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_New {
            get {
                return ResourceManager.GetString("Common.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_No {
            get {
                return ResourceManager.GetString("Common.No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   OK に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_OK {
            get {
                return ResourceManager.GetString("Common.OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Presets に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Presets {
            get {
                return ResourceManager.GetString("Common.Presets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Reset {
            get {
                return ResourceManager.GetString("Common.Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Value に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Value {
            get {
                return ResourceManager.GetString("Common.Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Yes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Common_Yes {
            get {
                return ResourceManager.GetString("Common.Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Close Roblox に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_CloseRoblox {
            get {
                return ResourceManager.GetString("ContextMenu.CloseRoblox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Are you sure you want to close Roblox? This will forcefully end the process. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_CloseRobloxMessage {
            get {
                return ResourceManager.GetString("ContextMenu.CloseRobloxMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy invite deeplink に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_CopyDeeplinkInvite {
            get {
                return ResourceManager.GetString("ContextMenu.CopyDeeplinkInvite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Keep on top に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_LogTracer_KeepOnTop {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.KeepOnTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Scroll to end に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_LogTracer_ScrollToEnd {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.ScrollToEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Text wrapping に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_LogTracer_TextWrapping {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.TextWrapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Log tracer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_LogTracer_Title {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tracing {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_LogTracer_TracingFormat {
            get {
                return ResourceManager.GetString("ContextMenu.LogTracer.TracingFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open log tracer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_OpenLogTracer {
            get {
                return ResourceManager.GetString("ContextMenu.OpenLogTracer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   See server details に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_SeeServerDetails {
            get {
                return ResourceManager.GetString("ContextMenu.SeeServerDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy Instance ID に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_ServerInformation_CopyInstanceId {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.CopyInstanceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Instance ID に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_ServerInformation_InstanceId {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.InstanceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Loading, please wait... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_ServerInformation_Loading {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_ServerInformation_Location {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Server information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_ServerInformation_Title {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_ServerInformation_Type {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} server に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_ServerInformation_TypeFormat {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.TypeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   UDMUX proxied に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContextMenu_ServerInformation_UdmuxProxied {
            get {
                return ResourceManager.GetString("ContextMenu.ServerInformation.UdmuxProxied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add FastFlag に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_AddFastFlag_Title {
            get {
                return ResourceManager.GetString("Dialog.AddFastFlag.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Paste in your JSON here... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_BulkAddFastFlag_Paste {
            get {
                return ResourceManager.GetString("Dialog.BulkAddFastFlag.Paste", resourceCulture);
            }
        }
        
        /// <summary>
        ///   More information: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Connectivity_MoreInfo {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connectivity error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Connectivity_Title {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap is unable to connect to {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Connectivity_UnableToConnect {
            get {
                return ResourceManager.GetString("Dialog.Connectivity.UnableToConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Copy log contents に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Exception_CopyLogContents {
            get {
                return ResourceManager.GetString("Dialog.Exception.CopyLogContents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An exception occurred while running Bloxstrap に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Exception_Info_1 {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Please report this exception through a GitHub issue or in our Discord chat, along with a copy of the log file that was created. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Exception_Info_2 {
            get {
                return ResourceManager.GetString("Dialog.Exception.Info.2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Submit report... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Exception_SubmitReport {
            get {
                return ResourceManager.GetString("Dialog.Exception.SubmitReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Submit report via Discord に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Exception_SubmitReportDiscord {
            get {
                return ResourceManager.GetString("Dialog.Exception.SubmitReportDiscord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Submit report via GitHub に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Exception_SubmitReportGithub {
            get {
                return ResourceManager.GetString("Dialog.Exception.SubmitReportGithub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap Exception に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Dialog_Exception_Title {
            get {
                return ResourceManager.GetString("Dialog.Exception.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2008 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2008 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2011 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2011 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2017 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2017 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2017", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2019 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2019 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2019", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2022 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperIcon_Icon2022 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.Icon2022", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperIcon_IconBloxstrap {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconBloxstrap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperIcon_IconCustom {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconCustom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Early 2015 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperIcon_IconEarly2015 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconEarly2015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Late 2015 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperIcon_IconLate2015 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperIcon.IconLate2015", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fake Byfron (2023) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperStyle_ByfronDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ByfronDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fluent に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperStyle_FluentDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.FluentDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Legacy (2008 - 2011) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperStyle_LegacyDialog2008 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.LegacyDialog2008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Legacy (2011 - 2014) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperStyle_LegacyDialog2011 {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.LegacyDialog2011", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Progress (~2014) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperStyle_ProgressDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.ProgressDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vista (2008 - 2011) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_BootstrapperStyle_VistaDialog {
            get {
                return ResourceManager.GetString("Enums.BootstrapperStyle.VistaDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Change automatically に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_ChannelChangeMode_Automatic {
            get {
                return ResourceManager.GetString("Enums.ChannelChangeMode.Automatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Never change に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_ChannelChangeMode_Ignore {
            get {
                return ResourceManager.GetString("Enums.ChannelChangeMode.Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Always prompt に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_ChannelChangeMode_Prompt {
            get {
                return ResourceManager.GetString("Enums.ChannelChangeMode.Prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_CursorType_Default {
            get {
                return ResourceManager.GetString("Enums.CursorType.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2006 (Cartoony) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_CursorType_From2006 {
            get {
                return ResourceManager.GetString("Enums.CursorType.From2006", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2013 (Angular) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_CursorType_From2013 {
            get {
                return ResourceManager.GetString("Enums.CursorType.From2013", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Catmoji に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_EmojiType_Catmoji {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Catmoji", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default (Twemoji) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_EmojiType_Default {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Windows 10 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_EmojiType_Windows10 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Windows 11 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_EmojiType_Windows11 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Windows 8 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_EmojiType_Windows8 {
            get {
                return ResourceManager.GetString("Enums.EmojiType.Windows8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Version 1 (2015) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V1 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Version 2 (2020) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V2 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Version 4 (2023) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_InGameMenuVersion_V4 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.InGameMenuVersion.V4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Chosen by game に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Future (Phase 3) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Future {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Future", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Shadow Map (Phase 2) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_ShadowMap {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.ShadowMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Voxel (Phase 1) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_LightingMode_Voxel {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.LightingMode.Voxel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Chosen by game に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_MaterialVersion_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MaterialVersion.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New (2022) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_MaterialVersion_New {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MaterialVersion.New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Old (Pre-2022) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_MaterialVersion_Old {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MaterialVersion.Old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   1x MSAA に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_x1 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.x1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2x MSAA に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_x2 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.x2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   4x MSAA に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_x4 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.x4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   8x MSAA に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_MSAAMode_x8 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.MSAAMode.x8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   D3D10 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_D3D10 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.D3D10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   D3D11 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_D3D11 {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.D3D11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_Default {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   OpenGL に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_OpenGL {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.OpenGL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Vulkan に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_FlagPresets_RenderingMode_Vulkan {
            get {
                return ResourceManager.GetString("Enums.FlagPresets.RenderingMode.Vulkan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Private に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_ServerType_Private {
            get {
                return ResourceManager.GetString("Enums.ServerType.Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Public に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_ServerType_Public {
            get {
                return ResourceManager.GetString("Enums.ServerType.Public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reserved に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_ServerType_Reserved {
            get {
                return ResourceManager.GetString("Enums.ServerType.Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_Theme_Dark {
            get {
                return ResourceManager.GetString("Enums.Theme.Dark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   System Default に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_Theme_Default {
            get {
                return ResourceManager.GetString("Enums.Theme.Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Light に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Enums_Theme_Light {
            get {
                return ResourceManager.GetString("Enums.Theme.Light", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap has detected a drive letter change and has reconfigured its install location from the {0} drive to the {1} drive.
        ///
        ///While Bloxstrap will continue to work, it&apos;s recommended that you change the drive letter back to its original value as other installed applications can experience similar issues. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InstallChecker_DriveLetterChangeDetected {
            get {
                return ResourceManager.GetString("InstallChecker.DriveLetterChangeDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap was originally installed to the {0} drive, but it appears to no longer be present. Would you like to continue and carry out a fresh install? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InstallChecker_InstallDriveMissing {
            get {
                return ResourceManager.GetString("InstallChecker.InstallDriveMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   It appears as if Bloxstrap hasn&apos;t been properly installed. Is it supposed to be installed at {0}? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InstallChecker_NotInstalledProperly {
            get {
                return ResourceManager.GetString("InstallChecker.NotInstalledProperly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   See what&apos;s new in this version に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InstallChecker_SeeWhatsNew {
            get {
                return ResourceManager.GetString("InstallChecker.SeeWhatsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap has been upgraded to v{0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InstallChecker_Updated {
            get {
                return ResourceManager.GetString("InstallChecker.Updated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The version of Bloxstrap you&apos;ve launched is different to the version you currently have installed.
        ///Would you like to upgrade your currently installed version? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InstallChecker_VersionDifferentThanInstalled {
            get {
                return ResourceManager.GetString("InstallChecker.VersionDifferentThanInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Commit Hash に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_BuildCommitHash {
            get {
                return ResourceManager.GetString("Menu.About.BuildCommitHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Build Information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_BuildInformation {
            get {
                return ResourceManager.GetString("Menu.About.BuildInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Machine に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_BuildMachine {
            get {
                return ResourceManager.GetString("Menu.About.BuildMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Commit Ref に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_BuildRef {
            get {
                return ResourceManager.GetString("Menu.About.BuildRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Timestamp に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_BuildTimestamp {
            get {
                return ResourceManager.GetString("Menu.About.BuildTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Contributors に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Contributors {
            get {
                return ResourceManager.GetString("Menu.About.Contributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Code に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Contributors_Code {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   These are the people who have made notable contributions to Bloxstrap, helping make it what it is. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Contributors_Description {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Feature Ideas に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Contributors_FeatureIdeas {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.FeatureIdeas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Translations に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Contributors_Translations {
            get {
                return ResourceManager.GetString("Menu.About.Contributors.Translations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An open-source, feature-packed alternative bootstrapper for Roblox に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Description_1 {
            get {
                return ResourceManager.GetString("Menu.About.Description.1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Developed by pizzaboxer - if you like this, please consider leaving a star on GitHub! に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Description_2 {
            get {
                return ResourceManager.GetString("Menu.About.Description.2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Discord server に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_DiscordServer {
            get {
                return ResourceManager.GetString("Menu.About.DiscordServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   GitHub repository に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_GithubRepository {
            get {
                return ResourceManager.GetString("Menu.About.GithubRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Help and Information に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_HelpInformation {
            get {
                return ResourceManager.GetString("Menu.About.HelpInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Licenses に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Licenses {
            get {
                return ResourceManager.GetString("Menu.About.Licenses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Report an issue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_ReportIssue {
            get {
                return ResourceManager.GetString("Menu.About.ReportIssue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   About に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Title {
            get {
                return ResourceManager.GetString("Menu.About.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Using an unreleased version, I see? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_UnreleasedVersion {
            get {
                return ResourceManager.GetString("Menu.About.UnreleasedVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Version {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_About_Version {
            get {
                return ResourceManager.GetString("Menu.About.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   All files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_AllFiles {
            get {
                return ResourceManager.GetString("Menu.AllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap is currently running, likely as a background Roblox process. Please note that not all your changes will immediately apply until you close all currently open Roblox instances. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_AlreadyRunning {
            get {
                return ResourceManager.GetString("Menu.AlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You can make it look different, retro, or even just like Roblox. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Bootstrapper_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Bootstrapper.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bootstrapper に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Bootstrapper_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Bootstrapper.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configure other miscellaneous customisable options. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Customisation_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Customisation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Customisation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Customisation_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Customisation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Must be a multi-size .ico file with sizes 16px to 128px. Set Icon as &apos;Custom&apos; to use it. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_CustomisationIcon_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationIcon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom Icon に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_CustomisationIcon_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationIcon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The text that shows as the title of the bootstrapper. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_CustomisationTitle_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationTitle.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Title に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_CustomisationTitle_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.CustomisationTitle.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configure how Bloxstrap should look. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Dark theme does not apply to Legacy or Vista styles. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Global_Theme_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Global.Theme.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Global Theme に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Global_Theme_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Global.Theme.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose what icon it should use. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Icon_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Icon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Icon に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Icon_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Icon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Preview に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Preview {
            get {
                return ResourceManager.GetString("Menu.Appearance.Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose how it should look. Dark theme does not apply to Legacy/Vista. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Style_Description {
            get {
                return ResourceManager.GetString("Menu.Appearance.Style.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Style に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Style_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Style.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Appearance に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Appearance_Title {
            get {
                return ResourceManager.GetString("Menu.Appearance.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roblox or Bloxstrap may try to change your preferred channel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_AutoChannelChange_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoChannelChange.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatic channel change action に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_AutoChannelChange_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoChannelChange.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap will automatically check and update itself when launching Roblox. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_AutoUpdate_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoUpdate.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Automatically update Bloxstrap に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_AutoUpdate_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.AutoUpdate.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Deployed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Channel_Deployed {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Deployed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose which deployment channel Roblox should be downloaded from. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Channel_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The specified channel name does not exist. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Channel_DoesNotExist {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Failed to fetch information! に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Channel_FetchFailed {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.FetchFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fetching latest deploy info, please wait... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Channel_Fetching {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Fetching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This channel is out of date, and is likely no longer being updated. Please use another channel. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Channel_Outdated {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Outdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Channel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Channel_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Version に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Channel_Version {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Version GUID に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Channel_VersionGuid {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Channel.VersionGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap will place an icon on the desktop that launches Roblox the next time it launches. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_CreateDesktopIcon_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.CreateDesktopIcon.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Create desktop icon に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_CreateDesktopIcon_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.CreateDesktopIcon.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configure what Bloxstrap should do when launching. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roblox will be installed fresh on next launch. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxReinstall_Description {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxReinstall.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Force Roblox reinstallation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_ForceRobloxReinstall_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.ForceRobloxReinstall.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Behaviour に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Behaviour_Title {
            get {
                return ResourceManager.GetString("Menu.Behaviour.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Add new に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlagEditor_AddNew {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.AddNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Back に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlagEditor_Back {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Delete selected に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlagEditor_DeleteSelected {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.DeleteSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Manage your own FastFlags. Double click a column to edit. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlagEditor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Search に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlagEditor_Search {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show preset flags に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlagEditor_ShowPresetFlags {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.ShowPresetFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fast Flag Editor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlagEditor_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlagEditor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Control how specific Roblox engine parameters and features are configured. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Manage your own FastFlags. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Editor_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Editor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Learn more about FastFlags. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Help_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Help.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggle between using the consolidated 1-10 / fine-grained 1-21 graphics quality slider. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_AltGraphicsSelector_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.AltGraphicsSelector.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use alternate graphics quality selector に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_AltGraphicsSelector_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.AltGraphicsSelector.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   FastFlag preset for Direct3D [exclusive fullscreen]({0}) using Alt+Enter is already enabled by default. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_D3DExclusiveFullscreenInfo {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.D3DExclusiveFullscreenInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show values of specified flags during runtime. Each flag is comma separated. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_FlagStateOverlay_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.FlagStateOverlay.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Flag state overlay に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_FlagStateOverlay_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.FlagStateOverlay.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Set blank if not using a proxy. Don&apos;t forget to add cacert.pem as a mod. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_HttpProxyAddress_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.HttpProxyAddress.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HTTP proxy address に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_HttpProxyAddress_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.HttpProxyAddress.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enables logging of HTTP requests (DFLogHttpTraceLight=12). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_HttpRequestLogging_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.HttpRequestLogging.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HTTP request logging に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_HttpRequestLogging_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.HttpRequestLogging.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Debug に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_Debug_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Debug.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose which version of the escape menu to use. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_EscapeMenuVersion_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.EscapeMenuVersion.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Preferred escape menu version に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_EscapeMenuVersion_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.EscapeMenuVersion.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roblox reduces your rendering quality, depending on display scaling. This toggle disables that. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_FixDisplayScaling_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FixDisplayScaling.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Preserve rendering quality with display scaling に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_FixDisplayScaling_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FixDisplayScaling.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use a large number like 9999 for no limit. Set as 0 for defaults. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSLimit_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSLimit.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Framerate limit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_FPSLimit_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.FPSLimit.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Toggled with [keyboard shortcuts]({0}). Only works if you&apos;re in the [Bloxstrap group]({1}). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_HideGuis_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HideGuis.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable ability to hide GUIs に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_HideGuis_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.HideGuis.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose which lighting technology should be forced enabled in all games. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_LightingTechnology_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightingTechnology.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Preferred lighting technology に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_LightingTechnology_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.LightingTechnology.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose which material version should be forced in all games. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_Materials_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Materials.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Preferred materials に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_Materials_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.Materials.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   More information on this preset に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_MoreInfo {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose what renderer Roblox should use. VR requires Direct3D/Automatic. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_RenderingMode_Description {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RenderingMode.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Rendering mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Presets_RenderingMode_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Presets.RenderingMode.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Fast Flags に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FastFlags_Title {
            get {
                return ResourceManager.GetString("Menu.FastFlags.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Font files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_FontFiles {
            get {
                return ResourceManager.GetString("Menu.FontFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Icon files に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_IconFiles {
            get {
                return ResourceManager.GetString("Menu.IconFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Install に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Install {
            get {
                return ResourceManager.GetString("Menu.Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configure how Bloxstrap/Roblox is installed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Installation_Description {
            get {
                return ResourceManager.GetString("Menu.Installation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose where Bloxstrap should be installed to. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Installation_InstallLocation_Description {
            get {
                return ResourceManager.GetString("Menu.Installation.InstallLocation.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Install Location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Installation_InstallLocation_Title {
            get {
                return ResourceManager.GetString("Menu.Installation.InstallLocation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Where Bloxstrap is currently installed to. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Installation_OpenInstallFolder_Description {
            get {
                return ResourceManager.GetString("Menu.Installation.OpenInstallFolder.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open Installation Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Installation_OpenInstallFolder_Title {
            get {
                return ResourceManager.GetString("Menu.Installation.OpenInstallFolder.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Installation に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Installation_Title {
            get {
                return ResourceManager.GetString("Menu.Installation.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Here&apos;s a guide on how to uninstall Bloxstrap. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Installation_UninstallGuide_Description {
            get {
                return ResourceManager.GetString("Menu.Installation.UninstallGuide.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looking to uninstall? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Installation_UninstallGuide_Title {
            get {
                return ResourceManager.GetString("Menu.Installation.UninstallGuide.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap cannot be installed here. Please choose a different location, or resort to using the default location by clicking the reset button. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_InstallLocation_CantInstall {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.CantInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The folder you&apos;ve chosen to install Bloxstrap to already exists and is NOT empty. It is strongly recommended for Bloxstrap to be installed to its own independent folder.
        ///
        ///Changing to the following location is suggested:
        ///{0}
        ///
        ///Would you like to change to the suggested location?
        ///Selecting &apos;No&apos; will ignore this warning and continue installation. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_InstallLocation_NotEmpty {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   You must set an install location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_InstallLocation_NotSet {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap does not have write access to the install location you&apos;ve selected. Please choose another location. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_InstallLocation_NoWritePerms {
            get {
                return ResourceManager.GetString("Menu.InstallLocation.NoWritePerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Activity tracking に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_ActivityTracking {
            get {
                return ResourceManager.GetString("Menu.Integrations.ActivityTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allows for anybody to join the game you&apos;re currently in through your Discord profile. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_AllowActivityJoining_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowActivityJoining.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow activity joining に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_AllowActivityJoining_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowActivityJoining.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allows for having more than one Roblox game client instance open simultaneously. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_AllowMultipleInstances_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowMultipleInstances.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow multi-instance launching に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_AllowMultipleInstances_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.AllowMultipleInstances.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Application Location に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Custom_AppLocation {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AppLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   e.g. C:\Windows\System32\cmd.exe に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Custom_AppLocation_Placeholder {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AppLocation.Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Auto close when Roblox closes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Custom_AutoClose {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.AutoClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Here, you can have other programs launch with Roblox automatically. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Custom_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Launch Arguments に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Custom_LaunchArgs {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.LaunchArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   e.g. /k echo Roblox is running! に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Custom_LaunchArgs_Placeholder {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.LaunchArgs.Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   New Integration に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Custom_NewIntegration {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.NewIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No integration selected, please select or add a new one に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Custom_NoneSelected {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.NoneSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Custom Integrations に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Custom_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.Custom.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Configure quick and easy ways to improve the Roblox gameplay experience. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allows for Bloxstrap to detect what Roblox game you&apos;re playing. Certain features may require this. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_EnableActivityTracking_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.EnableActivityTracking.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable activity tracking に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_EnableActivityTracking_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.EnableActivityTracking.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   More information on this integration に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_MoreInfo {
            get {
                return ResourceManager.GetString("Menu.Integrations.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This feature requires activity tracking to be enabled. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_RequiresActivityTracking {
            get {
                return ResourceManager.GetString("Menu.Integrations.RequiresActivityTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When playing a Roblox game, the game you&apos;re playing will show on your Discord profile activity. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_ShowGameActivity_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowGameActivity.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show game activity に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_ShowGameActivity_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowGameActivity.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   When you join a game, you&apos;ll be notified of where your server&apos;s located. Won&apos;t show in fullscreen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_ShowServerDetails_Description {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowServerDetails.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   See server location when joining a game に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_ShowServerDetails_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.ShowServerDetails.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Integrations に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Integrations_Title {
            get {
                return ResourceManager.GetString("Menu.Integrations.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Manage and apply file mods to the Roblox game client. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   See info about managing and creating mods. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Help_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Help.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose font... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Choose {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Choose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Forces every in-game font to be a font that you choose. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Remove applied font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Remove {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Apply custom font に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Misc_CustomFont_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.CustomFont.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   A Windows feature that may conflict with performance in full-screen. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Misc_DisableFullscreenOptimisations_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.DisableFullscreenOptimisations.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disable fullscreen optimisations に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Misc_DisableFullscreenOptimisations_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Misc.DisableFullscreenOptimisations.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Manage custom Roblox mods here. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap must first be installed. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_MustBeInstalled {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.MustBeInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Open Mods Folder に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_OpenModsFolder_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.OpenModsFolder.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Stops the desktop app from showing, especially when you leave a game. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_DisableDesktopApp_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.DisableDesktopApp.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Disable desktop app に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_DisableDesktopApp_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.DisableDesktopApp.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose which type of emoji should Roblox use. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Preferred emoji type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_EmojiType_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.EmojiType.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Choose between using two classic Roblox cursor styles. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_MouseCursor_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.MouseCursor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mouse cursor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_MouseCursor_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.MouseCursor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bring back the old avatar editor background used in the Roblox app prior to 2020. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_OldAvatarEditor_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldAvatarEditor.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use old avatar editor background に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_OldAvatarEditor_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldAvatarEditor.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   An attempt to roughly bring back the character sounds used prior to 2014. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_OldCharacterSounds_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldCharacterSounds.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Emulate old character sounds に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_OldCharacterSounds_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldCharacterSounds.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bring back the classic &apos;oof&apos; death sound. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_OldDeathSound_Description {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldDeathSound.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Use old death sound に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Presets_OldDeathSound_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Presets.OldDeathSound.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mods に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Mods_Title {
            get {
                return ResourceManager.GetString("Menu.Mods.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Click for more information on this option. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_MoreInfo {
            get {
                return ResourceManager.GetString("Menu.MoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   There&apos;s just a few things you first should know about. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_PreInstall_Description {
            get {
                return ResourceManager.GetString("Menu.PreInstall.Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   After installation has finished, the Bloxstrap Menu will be registered as an application in the Start menu. If you ever need to access it again to re-adjust your settings, or access resources such as FastFlag management, you can find it there. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_PreInstall_Info_1 {
            get {
                return ResourceManager.GetString("Menu.PreInstall.Info.1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   If you ever need help or guidance with anything, be sure to check the [Wiki]({0}). If you still need something, open an [issue]({1}) on GitHub, or join our [Discord server]({2}). に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_PreInstall_Info_2 {
            get {
                return ResourceManager.GetString("Menu.PreInstall.Info.2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Before you install... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_PreInstall_Title {
            get {
                return ResourceManager.GetString("Menu.PreInstall.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Save に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Save {
            get {
                return ResourceManager.GetString("Menu.Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Bloxstrap Menu に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Menu_Title {
            get {
                return ResourceManager.GetString("Menu.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Roblox is attempting to set your channel to {0}, however your current preferred channel is {1}.
        ///
        ///Would you like to switch your preferred channel to {0}? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ProtocolHandler_RobloxSwitchedChannel {
            get {
                return ResourceManager.GetString("ProtocolHandler.RobloxSwitchedChannel", resourceCulture);
            }
        }
    }
}
